{"swagger":"2.0","info":{"title":"TB Device API Controller","description":" ThingsBoard open-source IoT platform REST API Device Controller.","contact":{"name":"ThingsBoard team","url":"https://thingsboard.io","email":"info@thingsboard.io"},"license":{"name":"Apache License Version 2.0","url":"https://github.com/thingsboard/thingsboard/blob/master/LICENSE"},"version":"3.3.3-SNAPSHOT"},"host":"demo.thingsboard.io","basePath":"/","schemes":["https"],"tags":[{"name":"device-controller","description":"Device Controller"}],"paths":{"/api/device/bulk_import":{"post":{"tags":["device-controller"],"summary":"Import the bulk of devices (processDevicesBulkImport)","description":"There's an ability to import the bulk of devices using the only .csv file.\n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"processDevicesBulkImportUsingPOST","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkImportRequest"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/BulkImportResult«Device»"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid request body","errorCode":31,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/device/credentials":{"post":{"tags":["device-controller"],"summary":"Update device credentials (updateDeviceCredentials)","description":"During device creation, platform generates random 'ACCESS_TOKEN' credentials. Use this method to update the device credentials. First use 'getDeviceCredentialsByDeviceId' to get the credentials id and value. Then use current method to update the credentials type and value. It is not possible to create multiple device credentials for the same device. The structure of device credentials id and value is simple for the 'ACCESS_TOKEN' but is much more complex for the 'MQTT_BASIC' or 'LWM2M_CREDENTIALS'.\n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"updateDeviceCredentialsUsingPOST","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceCredentials"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceCredentials"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid request body","errorCode":31,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/device/info/{deviceId}":{"get":{"tags":["device-controller"],"summary":"Get Device Info (getDeviceInfoById)","description":"Fetch the Device Info object based on the provided Device Id. If the user has the authority of 'Tenant Administrator', the server checks that the device is owned by the same tenant. If the user has the authority of 'Customer User', the server checks that the device is assigned to the same customer. Device Info is an extension of the default Device object that contains information about the assigned customer name and device profile name. \n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getDeviceInfoByIdUsingGET","parameters":[{"name":"deviceId","in":"path","description":"A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceInfo"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:41.717+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.244+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/device/types":{"get":{"tags":["device-controller"],"summary":"Get Device Types (getDeviceTypes)","description":"Returns a set of unique device profile names based on devices that are either owned by the tenant or assigned to the customer which user is performing the request.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getDeviceTypesUsingGET","responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/EntitySubtype"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:41.717+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.244+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/device/{deviceId}":{"get":{"tags":["device-controller"],"summary":"Get Device (getDeviceById)","description":"Fetch the Device object based on the provided Device Id. If the user has the authority of 'TENANT_ADMIN', the server checks that the device is owned by the same tenant. If the user has the authority of 'CUSTOMER_USER', the server checks that the device is assigned to the same customer.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getDeviceByIdUsingGET","parameters":[{"name":"deviceId","in":"path","description":"A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Device"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:41.717+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.244+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]},"delete":{"tags":["device-controller"],"summary":"Delete device (deleteDevice)","description":"Deletes the device, it's credentials and all the relations (from and to the device). Referencing non-existing device Id will cause an error.\n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"deleteDeviceUsingDELETE","parameters":[{"name":"deviceId","in":"path","description":"A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:42.246+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.246+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.246+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.246+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.246+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/device/{deviceId}/credentials":{"get":{"tags":["device-controller"],"summary":"Get Device Credentials (getDeviceCredentialsByDeviceId)","description":"If during device creation there wasn't specified any credentials, platform generates random 'ACCESS_TOKEN' credentials.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getDeviceCredentialsByDeviceIdUsingGET","parameters":[{"name":"deviceId","in":"path","description":"A string value representing the device id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceCredentials"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:41.717+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.244+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/devices":{"post":{"tags":["device-controller"],"summary":"Find related devices (findByQuery)","description":"Returns all devices that are related to the specific entity. The entity id, relation type, device types, depth of the search, and other query parameters defined using complex 'DeviceSearchQuery' object. See 'Model' tab of the Parameters for more info.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"findByQueryUsingPOST_1","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/DeviceSearchQuery"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"type":"array","items":{"$ref":"#/components/schemas/Device"}}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid request body","errorCode":31,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:42.245+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}}},"components":{"schemas":{"Device":{"title":"Device","required":["deviceProfileId","label","name","type"],"type":"object","properties":{"id":{"description":"JSON object with the Device Id. Specify this field to update the Device. Referencing non-existing Device Id will cause error. Omit this field to create new Device.","$ref":"#/components/schemas/DeviceId"},"createdTime":{"type":"integer","description":"Timestamp of the device creation, in milliseconds","format":"int64","readOnly":true,"example":1609459200000},"tenantId":{"description":"JSON object with Tenant Id. Use 'assignDeviceToTenant' to change the Tenant Id.","$ref":"#/components/schemas/TenantId","readOnly":true},"customerId":{"description":"JSON object with Customer Id. Use 'assignDeviceToCustomer' to change the Customer Id.","$ref":"#/components/schemas/CustomerId","readOnly":true},"name":{"type":"string","description":"Unique Device Name in scope of Tenant","example":"A4B72CCDFF33"},"type":{"type":"string","description":"Device Profile Name","example":"Temperature Sensor"},"label":{"type":"string","description":"Label that may be used in widgets","example":"Room 234 Sensor"},"deviceProfileId":{"description":"JSON object with Device Profile Id.","$ref":"#/components/schemas/DeviceProfileId"},"deviceData":{"description":"JSON object with content specific to type of transport in the device profile.","$ref":"#/components/schemas/DeviceData"},"firmwareId":{"description":"JSON object with Ota Package Id.","$ref":"#/components/schemas/OtaPackageId"},"softwareId":{"description":"JSON object with Ota Package Id.","$ref":"#/components/schemas/OtaPackageId"},"additionalInfo":{"description":"Additional parameters of the device","$ref":"#/components/schemas/JsonNode"}}},"DeviceConfiguration":{"title":"DeviceConfiguration","type":"object"},"DeviceCredentials":{"title":"DeviceCredentials","required":["credentialsId","deviceId","id"],"type":"object","properties":{"id":{"description":"The Id is automatically generated during device creation. Use 'getDeviceCredentialsByDeviceId' to obtain the id based on device id. Use 'updateDeviceCredentials' to update device credentials. ","$ref":"#/components/schemas/DeviceCredentialsId","readOnly":true,"example":"784f394c-42b6-435a-983c-b7beff2784f9"},"createdTime":{"type":"integer","description":"Timestamp of the device credentials creation, in milliseconds","format":"int64","example":1609459200000},"deviceId":{"description":"JSON object with the device Id.","$ref":"#/components/schemas/DeviceId"},"credentialsType":{"type":"string","description":"Type of the credentials","enum":["ACCESS_TOKEN","LWM2M_CREDENTIALS","MQTT_BASIC","X509_CERTIFICATE"]},"credentialsId":{"type":"string","description":"Unique Credentials Id per platform instance. Used to lookup credentials from the database. By default, new access token for your device. Depends on the type of the credentials.","example":"Access token or other value that depends on the credentials type"},"credentialsValue":{"type":"string","description":"Value of the credentials. Null in case of ACCESS_TOKEN credentials type. Base64 value in case of X509_CERTIFICATE. Complex object in case of MQTT_BASIC and LWM2M_CREDENTIALS","example":"Null in case of ACCESS_TOKEN. See model definition."}}},"DeviceCredentialsId":{"title":"DeviceCredentialsId","required":["id"],"type":"object","properties":{"id":{"type":"string","description":"string","format":"uuid","example":"784f394c-42b6-435a-983c-b7beff2784f9"}}},"DeviceData":{"title":"DeviceData","type":"object","properties":{"configuration":{"description":"Device configuration for device profile type. DEFAULT is only supported value for now","$ref":"#/components/schemas/DeviceConfiguration"},"transportConfiguration":{"description":"Device transport configuration used to connect the device","$ref":"#/components/schemas/DeviceTransportConfiguration"}}},"DeviceId":{"title":"DeviceId","required":["entityType","id"],"type":"object","properties":{"id":{"type":"string","description":"ID of the entity, time-based UUID v1","format":"uuid","example":"784f394c-42b6-435a-983c-b7beff2784f9"},"entityType":{"type":"string","description":"string","example":"DEVICE","enum":["DEVICE"]}}},"DeviceInfo":{"title":"DeviceInfo","required":["deviceProfileId","label","name","type"],"type":"object","properties":{"id":{"description":"JSON object with the Device Id. Specify this field to update the Device. Referencing non-existing Device Id will cause error. Omit this field to create new Device.","$ref":"#/components/schemas/DeviceId"},"createdTime":{"type":"integer","description":"Timestamp of the device creation, in milliseconds","format":"int64","readOnly":true,"example":1609459200000},"tenantId":{"description":"JSON object with Tenant Id. Use 'assignDeviceToTenant' to change the Tenant Id.","$ref":"#/components/schemas/TenantId","readOnly":true},"customerId":{"description":"JSON object with Customer Id. Use 'assignDeviceToCustomer' to change the Customer Id.","$ref":"#/components/schemas/CustomerId","readOnly":true},"name":{"type":"string","description":"Unique Device Name in scope of Tenant","example":"A4B72CCDFF33"},"type":{"type":"string","description":"Device Profile Name","example":"Temperature Sensor"},"label":{"type":"string","description":"Label that may be used in widgets","example":"Room 234 Sensor"},"deviceProfileId":{"description":"JSON object with Device Profile Id.","$ref":"#/components/schemas/DeviceProfileId"},"deviceData":{"description":"JSON object with content specific to type of transport in the device profile.","$ref":"#/components/schemas/DeviceData"},"firmwareId":{"description":"JSON object with Ota Package Id.","$ref":"#/components/schemas/OtaPackageId"},"softwareId":{"description":"JSON object with Ota Package Id.","$ref":"#/components/schemas/OtaPackageId"},"additionalInfo":{"description":"Additional parameters of the device","$ref":"#/components/schemas/JsonNode"},"customerTitle":{"type":"string","description":"Title of the Customer that owns the device.","readOnly":true},"customerIsPublic":{"type":"boolean","description":"Indicates special 'Public' Customer that is auto-generated to use the devices on public dashboards.","readOnly":true,"example":false},"deviceProfileName":{"type":"string","description":"Name of the corresponding Device Profile.","readOnly":true}}},"DeviceProfile":{"title":"DeviceProfile","type":"object","properties":{"id":{"description":"JSON object with the device profile Id. Specify this field to update the device profile. Referencing non-existing device profile Id will cause error. Omit this field to create new device profile.","$ref":"#/components/schemas/DeviceProfileId"},"createdTime":{"type":"integer","description":"Timestamp of the profile creation, in milliseconds","format":"int64","readOnly":true,"example":1609459200000},"tenantId":{"description":"JSON object with Tenant Id that owns the profile.","$ref":"#/components/schemas/TenantId","readOnly":true},"name":{"type":"string","description":"Unique Device Profile Name in scope of Tenant.","example":"Moisture Sensor"},"default":{"type":"boolean","description":"Used to mark the default profile. Default profile is used when the device profile is not specified during device creation.","example":false},"defaultDashboardId":{"description":"Reference to the dashboard. Used in the mobile application to open the default dashboard when user navigates to device details.","$ref":"#/components/schemas/DashboardId"},"defaultRuleChainId":{"description":"Reference to the rule chain. If present, the specified rule chain will be used to process all messages related to device, including telemetry, attribute updates, etc. Otherwise, the root rule chain will be used to process those messages.","$ref":"#/components/schemas/RuleChainId"},"defaultQueueName":{"type":"string","description":"Reference to the rule engine queue. If present, the specified queue will be used to store all unprocessed messages related to device, including telemetry, attribute updates, etc. Otherwise, the 'Main' queue will be used to store those messages."},"firmwareId":{"description":"Reference to the firmware OTA package. If present, the specified package will be used as default device firmware. ","$ref":"#/components/schemas/OtaPackageId"},"softwareId":{"description":"Reference to the software OTA package. If present, the specified package will be used as default device software. ","$ref":"#/components/schemas/OtaPackageId"},"description":{"type":"string","description":"Device Profile description. "},"image":{"type":"string","description":"Either URL or Base64 data of the icon. Used in the mobile application to visualize set of device profiles in the grid view. "},"provisionDeviceKey":{"type":"string","description":"Unique provisioning key used by 'Device Provisioning' feature."},"transportType":{"type":"string","description":"Type of the transport used to connect the device. Default transport supports HTTP, CoAP and MQTT.","enum":["COAP","DEFAULT","LWM2M","MQTT","SNMP"]},"provisionType":{"type":"string","description":"Provisioning strategy.","enum":["ALLOW_CREATE_NEW_DEVICES","CHECK_PRE_PROVISIONED_DEVICES","DISABLED"]},"profileData":{"description":"Complex JSON object that includes addition device profile configuration (transport, alarm rules, etc).","$ref":"#/components/schemas/DeviceProfileData"},"type":{"type":"string","description":"Type of the profile. Always 'DEFAULT' for now. Reserved for future use.","enum":["DEFAULT"]}}},"DeviceProfileAlarm":{"title":"DeviceProfileAlarm","type":"object","properties":{"id":{"type":"string","description":"String value representing the alarm rule id","example":"highTemperatureAlarmID"},"alarmType":{"type":"string","description":"String value representing type of the alarm","example":"High Temperature Alarm"},"createRules":{"type":"object","additionalProperties":{"$ref":"#/components/schemas/AlarmRule"},"description":"Complex JSON object representing create alarm rules. The unique create alarm rule can be created for each alarm severity type. There can be 5 create alarm rules configured per a single alarm type. See method implementation notes and AlarmRule model for more details"},"clearRule":{"description":"JSON object representing clear alarm rule","$ref":"#/components/schemas/AlarmRule"},"propagate":{"type":"boolean","description":"Propagation flag to specify if alarm should be propagated to parent entities of alarm originator","example":true},"propagateToOwner":{"type":"boolean","description":"Propagation flag to specify if alarm should be propagated to the owner (tenant or customer) of alarm originator","example":true},"propagateToTenant":{"type":"boolean","description":"Propagation flag to specify if alarm should be propagated to the tenant entity","example":true},"propagateRelationTypes":{"type":"array","description":"JSON array of relation types that should be used for propagation. By default, 'propagateRelationTypes' array is empty which means that the alarm will be propagated based on any relation type to parent entities. This parameter should be used only in case when 'propagate' parameter is set to true, otherwise, 'propagateRelationTypes' array will be ignored.","items":{"type":"string"}}}}}},"securityDefinitions":{"api_key":{"type":"apiKey","name":"api_key","in":"header"}},"definitions":{"ApiResponse":{"type":"object","properties":{"code":{"type":"integer","format":"int32"},"type":{"type":"string"},"message":{"type":"string"}}},"Category":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Category"}},"Pet":{"type":"object","required":["name","photoUrls"],"properties":{"id":{"type":"integer","format":"int64"},"category":{"$ref":"#/definitions/Category"},"name":{"type":"string","example":"doggie"},"photoUrls":{"type":"array","xml":{"wrapped":true},"items":{"type":"string","xml":{"name":"photoUrl"}}},"tags":{"type":"array","xml":{"wrapped":true},"items":{"xml":{"name":"tag"},"$ref":"#/definitions/Tag"}},"status":{"type":"string","description":"pet status in the store","enum":["available","pending","sold"]}},"xml":{"name":"Pet"}},"Tag":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"name":{"type":"string"}},"xml":{"name":"Tag"}},"Order":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"petId":{"type":"integer","format":"int64"},"quantity":{"type":"integer","format":"int32"},"shipDate":{"type":"string","format":"date-time"},"status":{"type":"string","description":"Order Status","enum":["placed","approved","delivered"]},"complete":{"type":"boolean"}},"xml":{"name":"Order"}},"User":{"type":"object","properties":{"id":{"type":"integer","format":"int64"},"username":{"type":"string"},"firstName":{"type":"string"},"lastName":{"type":"string"},"email":{"type":"string"},"password":{"type":"string"},"phone":{"type":"string"},"userStatus":{"type":"integer","format":"int32","description":"User Status"}},"xml":{"name":"User"}}}}
