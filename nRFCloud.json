{
  "components": {
    "examples": {},
    "headers": {},
    "parameters": {},
    "requestBodies": {},
    "responses": {},
    "schemas": {
      "TenantId": {
        "type": "string",
        "example": "a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9",
        "description": "The UUID of the team owning the device(s)",
        "pattern": "^[a-f0-9]{8}-?[a-f0-9]{4}-?[a-f0-9]{4}-?[a-f0-9]{4}-?[a-f0-9]{12}$"
      },
      "TenantUserRole": {
        "description": "Your role on the team, defining your permitted actions and device access",
        "enum": [
          "admin",
          "editor",
          "viewer"
        ],
        "type": "string"
      },
      "Nominal_string.DeviceTag_": {
        "type": "string"
      },
      "DeviceTag": {
        "$ref": "#/components/schemas/Nominal_string.DeviceTag_",
        "pattern": "^[a-zA-Z0-9_.@:#-]+$"
      },
      "InfoArgs": {
        "description": "Describes general info for this user in this team",
        "properties": {
          "mqttEndpoint": {
            "type": "string",
            "description": "The MQTT endpoint to connect to",
            "example": "abcde12345-ats.iot.us-east-1.amazonaws.com"
          },
          "mqttTopicPrefix": {
            "type": "string",
            "description": "The global prefix for all topics",
            "example": "prod/a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9/"
          },
          "team": {
            "properties": {
              "name": {
                "type": "string",
                "description": "The user-defined friendly name of the team",
                "example": "My Team 1"
              },
              "tenantId": {
                "$ref": "#/components/schemas/TenantId",
                "description": "The UUID of the team owning the device(s)",
                "example": "a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9"
              }
            },
            "required": [
              "tenantId"
            ],
            "type": "object",
            "description": "Information about your team that owns the devices accessible by your API key"
          },
          "role": {
            "$ref": "#/components/schemas/TenantUserRole",
            "description": "Your role on the team, defining your permitted actions and device access",
            "example": "editor"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/DeviceTag"
            },
            "type": "array",
            "description": "Your assigned list of device tags (device groups in the nrfcloud.com UI).\nYou can access devices that have any of these tags assigned, and devices that have no tags assigned.",
            "example": [
              "warehouse-east",
              "temperature"
            ]
          }
        },
        "required": [
          "mqttEndpoint",
          "mqttTopicPrefix",
          "team",
          "role"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "MetricIntervalDatePart": {
        "type": "string",
        "pattern": "^\\d{4}-\\d{2}$|^\\d{4}-\\d{2}-\\d{2}$"
      },
      "Service": {
        "enum": [
          "LOCATION",
          "FOTA"
        ],
        "type": "string"
      },
      "FirmwareTypes": {
        "description": "Firmware types that can be specified in the device's shadow in reported.device.serviceInfo.fota_v2 and\nin its Elasticsearch document in the firmware.supports array.",
        "enum": [
          "APP",
          "MODEM",
          "BOOT",
          "SOFTDEVICE",
          "BOOTLOADER"
        ],
        "type": "string"
      },
      "LocationServiceType": {
        "enum": [
          "AGPS",
          "SCELL",
          "MCELL",
          "PGPS",
          "WIFI",
          "AGPS_EVAL",
          "SCELL_EVAL",
          "MCELL_EVAL",
          "PGPS_EVAL",
          "WIFI_EVAL"
        ],
        "type": "string"
      },
      "ServiceTypeValue": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/FirmwareTypes"
          },
          {
            "$ref": "#/components/schemas/LocationServiceType"
          }
        ]
      },
      "MetricSource": {
        "enum": [
          "REST",
          "MQTT",
          "GRAPHQL"
        ],
        "type": "string"
      },
      "UsageRecord": {
        "properties": {
          "date": {
            "$ref": "#/components/schemas/MetricIntervalDatePart"
          },
          "tenantId": {
            "$ref": "#/components/schemas/TenantId"
          },
          "service": {
            "$ref": "#/components/schemas/Service"
          },
          "serviceType": {
            "$ref": "#/components/schemas/ServiceTypeValue"
          },
          "source": {
            "$ref": "#/components/schemas/MetricSource"
          },
          "sum": {
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "tenantId",
          "service",
          "sum"
        ],
        "type": "object",
        "additionalProperties": false,
        "example": {
          "date": "2021-08",
          "tenantId": "a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9",
          "service": "LOCATION",
          "serviceType": "APP",
          "source": "REST",
          "sum": 1
        }
      },
      "PaginatedResult_UsageRecord_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/UsageRecord"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PageLimit": {
        "type": "integer",
        "format": "int32",
        "description": "Maximum number of items you want returned in the response (<=100).",
        "minimum": 1,
        "maximum": 100
      },
      "PageNextToken": {
        "type": "string",
        "example": "4bb1f9ab35bd",
        "description": "If available in the initial response, use this token to retrieve the next page of items in the list."
      },
      "DeviceId": {
        "type": "string",
        "example": "b67217f3-c246-4c7c-91b0-214579ce10d0",
        "description": "This is the canonical device id used in the device certificate, and as the MQTT client id.",
        "pattern": "/^[a-z0-9:_-]{1,128}$/i"
      },
      "DeviceCertificate": {
        "properties": {
          "clientId": {
            "$ref": "#/components/schemas/DeviceId",
            "description": "The ID for the device associated with this certificate. Use this when setting the clientId for your MQTT client.",
            "example": "nrf-123456789123456"
          },
          "caCert": {
            "type": "string",
            "description": "The AmazonRootCA1.pem used for establishing TLS communications with AWS IoT.",
            "example": "-----BEGIN CERTIFICATE-----\nMIIDQTCCAimgAwIBAgITBmyfz5m/jAo54vB4ikPmljZbyjANBgkqhkiG9w0BAQsF\nADA5MQswCQYDVQQGEwJVUzEPMA0GA1UEChMGQW1hem9uMRkwFwYDVQQDExBBbWF6\nb24gUm9vdCBDQSAxMB4XDTE1MDUyNjAwMDAwMFoXDTM4MDExNzAwMDAwMFowOTEL\nMAkGA1UEBhMCVVMxDzANBgNVBAoTBkFtYXpvbjEZMBcGA1UEAxMQQW1hem9uIFJv\nb3QgQ0EgMTCCASIwDQYJKoZIhvcNAQEBBQADggEPADCCAQoCggEBALJ4gHHKeNXj\nca9HgFB0fW7Y14h29Jlo91ghYPl0hAEvrAIthtOgQ3pOsqTQNroBvo3bSMgHFzZM\n9O6II8c+6zf1tRn4SWiw3te5djgdYZ6k/oI2peVKVuRF4fn9tBb6dNqcmzU5L/qw\nIFAGbHrQgLKm+a/sRxmPUDgH3KKHOVj4utWp+UhnMJbulHheb4mjUcAwhmahRWa6\nVOujw5H5SNz/0egwLX0tdHA114gk957EWW67c4cX8jJGKLhD+rcdqsq08p8kDi1L\n93FcXmn/6pUCyziKrlA4b9v7LWIbxcceVOF34GfID5yHI9Y/QCB/IIDEgEw+OyQm\njgSubJrIqg0CAwEAAaNCMEAwDwYDVR0TAQH/BAUwAwEB/zAOBgNVHQ8BAf8EBAMC\nAYYwHQYDVR0OBBYEFIQYzIU07LwMlJQuCFmcx7IQTgoIMA0GCSqGSIb3DQEBCwUA\nA4IBAQCY8jdaQZChGsV2USggNiMOruYou6r4lK5IpDB/G/wkjUu0yKGX9rbxenDI\nU5PMCCjjmCXPI6T53iHTfIUJrU6adTrCC2qJeHZERxhlbI1Bjjt/msv0tadQ1wUs\nN+gDS63pYaACbvXy8MWy7Vu33PqUXHeeE6V/Uq2V8viTO96LXFvKWlJbYK8U90vv\no/ufQJVtMVT8QtPHRh8jrdkPSHCa2XV4cdFyQzR1bldZwgJcJmApzyMZFo6IQ6XU\n5MsI+yMRQ+hDKXJioaldXgjUkK642M4UwtBV8ob2xJNDd2ZhwLnoQdeXeGADbkpy\nrqXRfboQnoZsG4q5WTP468SQvvG5\n-----END CERTIFICATE-----\n"
          },
          "clientCert": {
            "type": "string",
            "description": "The x.509 certificate. If this is for an \"account device\" this string contains only one certificate. JITP device certificates, which are generated using an intermediate CA cert, contain a bundled certificate consisting of the device certificate and the intermediate CA pem.",
            "example": "-----BEGIN CERTIFICATE-----\nMIIB7DCCAZMCFFxFKi7+awbjc0j1fN2eh4rsSOZ/MAoGCCqGSM49BAMCMGgxCzAJ\nBgNVBAYTAk5PMQ8wDQYDVQQIDAZOb3J3YXkxEjAQBgNVBAcMCVRyb25kaGVpbTEd\nMBsGA1UECgwUTm9yZGljIFNlbWljb25kdWN0b3IxFTATBgNVBAsMDFRlc3QgRGV2\naWNlczAgFw0yMTA2MTEyMDU4MzVaGA8yMDUxMDYwNDIwNTgzNVowgYcxCzAJBgNV\nBAYTAk5PMRIwEAYDVQQIDAlUcm9uZGVsYWcxEjAQBgNVBAcMCVRyb25kaGVpbTEh\nMB8GA1UECgwYTm9yZGljIFNlbWljb25kdWN0b3IgQVNBMS0wKwYDVQQDDCRkYjEw\nOWYxMC1iOTZiLTRhNGMtODIxOS0yMTEzOTQyNjE2ZDMwWTATBgcqhkjOPQIBBggq\nhkjOPQMBBwNCAAQS2bfNI8mgS9b7d6zC/qnYo3C4/Xck/4sbGsUBsOWDKcgp303h\njgWsEWPmq+sZdvUD5NUvwcODxjchEE+1EjXfMAoGCCqGSM49BAMCA0cAMEQCIDWi\nAH0Oml+9+jEPtnqm6pm6vFmHlHlIovAqBZTed2teAiBGg9S21Wd+gFA1Y38OyURw\nGKc8WsgwULn8tOOuGNdl8w==\n-----END CERTIFICATE-----\n"
          },
          "privateKey": {
            "type": "string",
            "description": "The private key associated with the device certificate.",
            "example": "-----BEGIN EC PARAMETERS-----\nBggqhkjOPQMBBw==\n-----END EC PARAMETERS-----\n-----BEGIN EC PRIVATE KEY-----\nMHcCAQEEIFcBJEN+pgMAZZqlHySta85JQUR+Q9joiQRkKM+MhidLoAoGCCqGSM49\nAwEHoUQDQgAEEtm3zSPJoEvW+3eswv6p2KNwuP13JP+LGxrFAbDlgynIKd9N4Y4F\nrBFj5qvrGXb1A+TVL8HDg8Y3IRBPtRI13w==\n-----END EC PRIVATE KEY-----\n"
          }
        },
        "required": [
          "clientId",
          "caCert",
          "clientCert",
          "privateKey"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CertificateListItem": {
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the certificate.",
            "example": "a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9"
          },
          "clientId": {
            "type": "string",
            "description": "The id of the device associated with this certificate. Use this when setting the clientId for your MQTT client.",
            "example": "nrf-123456789123456"
          }
        },
        "required": [
          "id",
          "clientId"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PaginatedResult_CertificateListItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/CertificateListItem"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CertificateId": {
        "type": "string"
      },
      "ServiceEvaluationTokenResponse": {
        "properties": {
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "Expiration date for the provided Service Evaluation Token"
          },
          "token": {
            "type": "string",
            "description": "Service Evaluation Token",
            "example": "eyJhbGciOiJFUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE2MzU0NDQ2NDAsImlhdCI6MTYzMjg1MjY1NCwic3ViIjoibnJmY2xvdWQtZXZhbHVhdGlvbi1kZXZpY2UtM2JmNTBlY2YtMmY3Zi00NjlmLTg4YTQtMmFhODhiZGMwODNiIn0.ldxPFg7xofD8gxjRkdu8WXl-cD01wVqn-VhvhyeuEXMeAmFpDHbSxEo5rs1DofEougUQnZy31T-e_5EQ8rlNMg"
          }
        },
        "required": [
          "expires",
          "token"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "ULID": {
        "type": "string",
        "example": "01EZZJVDQJPWT7V4FWNVDHNMM5",
        "description": "Universally Unique Lexicographically Sortable Identifier (using Crockford's alphabet).",
        "pattern": "^[0-9A-HJKMNP-TV-Z]{26}$"
      },
      "BulkOpsRequestEndpoint": {
        "enum": [
          "PROVISION_DEVICES",
          "REGISTER_PUBLIC_KEYS"
        ],
        "type": "string"
      },
      "BulkOpsRequestStatus": {
        "enum": [
          "PENDING",
          "IN_PROGRESS",
          "FAILED",
          "SUCCEEDED"
        ],
        "type": "string"
      },
      "ISODateTimeString": {
        "type": "string",
        "example": "2020-06-25T21:05:12.830Z",
        "format": "date-time",
        "description": "HTML-encoded ISO-8601 date-time string denoting the start or end of a date range, inclusive of that date/time unless the parameter name contains \"exclusive\"."
      },
      "Pick_BulkOpsRequest.Exclude_keyofBulkOpsRequest.tenantId__": {
        "properties": {
          "bulkOpsRequestId": {
            "$ref": "#/components/schemas/ULID"
          },
          "endpoint": {
            "$ref": "#/components/schemas/BulkOpsRequestEndpoint"
          },
          "status": {
            "$ref": "#/components/schemas/BulkOpsRequestStatus"
          },
          "requestedAt": {
            "$ref": "#/components/schemas/ISODateTimeString"
          },
          "completedAt": {
            "$ref": "#/components/schemas/ISODateTimeString"
          }
        },
        "required": [
          "bulkOpsRequestId",
          "endpoint",
          "status",
          "requestedAt"
        ],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "BulkOpsRequestDetails": {
        "properties": {
          "bulkOpsRequestId": {
            "$ref": "#/components/schemas/ULID"
          },
          "endpoint": {
            "$ref": "#/components/schemas/BulkOpsRequestEndpoint"
          },
          "status": {
            "$ref": "#/components/schemas/BulkOpsRequestStatus"
          },
          "requestedAt": {
            "$ref": "#/components/schemas/ISODateTimeString"
          },
          "completedAt": {
            "$ref": "#/components/schemas/ISODateTimeString"
          },
          "uploadedDataUrl": {
            "type": "string",
            "description": "The URL at which you can retrieve the data you originally uploaded to an endpoint that supports bulk operations.",
            "example": "https://bulk-ops-requests.nrfcloud.com/a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9/provision_devices/01EZZJVDQJPWT7V4FWNVDHNMM5.csv"
          },
          "errorSummaryUrl": {
            "type": "string",
            "description": "The URL at which you can retrieve a summary of errors and the row indices they occurred at for a failed bulk ops request job.",
            "example": "https://bulk-ops-requests.nrfcloud.com/a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9/provision_devices/01EZZJVDQJPWT7V4FWNVDHNMM5.json"
          }
        },
        "required": [
          "bulkOpsRequestId",
          "endpoint",
          "status",
          "requestedAt",
          "uploadedDataUrl"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PaginatedResult_BulkOpsRequestDetails_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/BulkOpsRequestDetails"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Nominal_string.OwnershipCode_": {
        "type": "string"
      },
      "OwnershipCode": {
        "$ref": "#/components/schemas/Nominal_string.OwnershipCode_",
        "description": "For Nordic products this is the PIN or HWID printed on the label. Otherwise, this is the ownership code you set when creating a device certificate.\nAll ownership codes are sanitized. Requires a min of 4 characters consisting only of numbers, letters, - or :.",
        "pattern": "^[a-zA-Z0-9-:]{4,}$"
      },
      "ThingType": {
        "type": "string",
        "description": "A custom string value to specify the type of thing (device) being provisioned on nRF Cloud.",
        "pattern": "/[a-zA-Z0-9_.,@\\/:#-]{0,799}/"
      },
      "Nominal_string.BLEUUID_": {
        "type": "string"
      },
      "BLEUUID": {
        "$ref": "#/components/schemas/Nominal_string.BLEUUID_"
      },
      "CharacteristicId": {
        "$ref": "#/components/schemas/BLEUUID",
        "pattern": "^[a-fA-F0-9]{4}$|^[a-fA-F0-9]{8}$|^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$"
      },
      "DescriptorId": {
        "$ref": "#/components/schemas/BLEUUID",
        "pattern": "^[a-fA-F0-9]{4}$|^[a-fA-F0-9]{8}$|^[a-fA-F0-9]{8}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{4}-?[a-fA-F0-9]{12}$"
      },
      "RestApiPayloadContentTypeWithCsv": {
        "enum": [
          "text/plain;charset=UTF8",
          "text/plain;charset=ASCII",
          "text/plain",
          "application/octet-stream",
          "text/csv"
        ],
        "type": "string"
      },
      "ProvisionDevicesPayload": {
        "type": "string"
      },
      "RegisterPublicKeysPayload": {
        "type": "string"
      },
      "deviceTypes.Generic": {
        "enum": [
          "Generic"
        ],
        "type": "string"
      },
      "NonGatewayIPDeviceSubType": {
        "enum": [
          "jitp-generic",
          "jitp-nordic-hardware",
          "unknown"
        ],
        "type": "string"
      },
      "GenericDeviceState": {
        "properties": {
          "reported": {
            "properties": {},
            "additionalProperties": {},
            "type": "object",
            "example": {
              "connected": false,
              "sessionIdentifier": "ab6af4e7-32e8-4107-94d8-f096e776c077",
              "pairing": {
                "state": "paired",
                "topics": {
                  "d2c": "prod/7c219c23-644e-4565-9fe7-6c56ab8bf949/m/d/nrf-123456789012345",
                  "c2d": "prod/7c219c23-644e-4565-9fe7-6c56ab8bf949/m/d/nrf-123456789012345/c2d"
                }
              },
              "nrfcloud_mqtt_topic_prefix": "prod/7c219c23-644e-4565-9fe7-6c56ab8bf949/",
              "device": {
                "networkInfo": {
                  "currentBand": 20,
                  "supportedBands": "(1,2,3,4,5,8,12,13,17,18,19,20,25,26,28,66)\r\n",
                  "areaCode": 3030,
                  "mccmnc": "22801",
                  "ipAddress": "10.1.10.106",
                  "ueMode": 2,
                  "cellID": 17513992,
                  "networkMode": "LTE-M GPS"
                },
                "simInfo": {
                  "uiccMode": 1,
                  "iccid": "89410119346707573424",
                  "imsi": "228017001757342"
                },
                "deviceInfo": {
                  "modemFirmware": "mfw_nrf9160_1.2.0",
                  "batteryVoltage": 5203,
                  "imei": "123456789012345",
                  "board": "nrf9160_pca10090",
                  "appVersion": "v1.2.0-406-gbc7ade8b14a1",
                  "appName": "asset_tracker"
                },
                "serviceInfo": {
                  "ui": [
                    "GPS",
                    "FLIP",
                    "TEMP",
                    "HUMID",
                    "AIR_PRESS",
                    "RSRP"
                  ],
                  "fota_v1": [
                    "APP",
                    "MODEM"
                  ]
                }
              },
              "config": {
                "GPS": {
                  "enable": false
                }
              }
            }
          },
          "desired": {
            "properties": {},
            "additionalProperties": {},
            "type": "object",
            "example": {
              "pairing": {
                "state": "paired",
                "topics": {
                  "d2c": "prod/7c219c23-644e-4565-9fe7-6c56ab8bf949/m/d/nrf-123456789012345",
                  "c2d": "prod/7c219c23-644e-4565-9fe7-6c56ab8bf949/m/d/nrf-123456789012345/c2d"
                }
              },
              "nrfcloud_mqtt_topic_prefix": "prod/7c219c23-644e-4565-9fe7-6c56ab8bf949/"
            }
          },
          "delta": {
            "properties": {},
            "additionalProperties": {},
            "type": "object",
            "example": {
              "config": {
                "GPS": {
                  "enable": true
                }
              }
            }
          },
          "metadata": {
            "properties": {},
            "additionalProperties": {},
            "type": "object",
            "example": {
              "desired": {
                "pairing": {
                  "state": {
                    "timestamp": 1594295242
                  },
                  "topics": {
                    "d2c": {
                      "timestamp": 1594295242
                    },
                    "c2d": {
                      "timestamp": 1594295242
                    }
                  }
                },
                "nrfcloud_mqtt_topic_prefix": {
                  "timestamp": 1594295242
                }
              },
              "reported": {
                "connected": {
                  "timestamp": 1594395957
                },
                "sessionIdentifier": {
                  "timestamp": 1594395957
                },
                "pairing": {
                  "state": {
                    "timestamp": 1594395561
                  },
                  "topics": {
                    "d2c": {
                      "timestamp": 1594395561
                    },
                    "c2d": {
                      "timestamp": 1594395561
                    }
                  }
                },
                "nrfcloud_mqtt_topic_prefix": {
                  "timestamp": 1594395561
                },
                "device": {
                  "networkInfo": {
                    "currentBand": {
                      "timestamp": 1594395562
                    },
                    "supportedBands": {
                      "timestamp": 1594395562
                    },
                    "areaCode": {
                      "timestamp": 1594395562
                    },
                    "mccmnc": {
                      "timestamp": 1594395562
                    },
                    "ipAddress": {
                      "timestamp": 1594395562
                    },
                    "ueMode": {
                      "timestamp": 1594395562
                    },
                    "cellID": {
                      "timestamp": 1594395562
                    },
                    "networkMode": {
                      "timestamp": 1594395562
                    }
                  },
                  "simInfo": {
                    "uiccMode": {
                      "timestamp": 1594395562
                    },
                    "iccid": {
                      "timestamp": 1594395562
                    },
                    "imsi": {
                      "timestamp": 1594395562
                    }
                  },
                  "deviceInfo": {
                    "modemFirmware": {
                      "timestamp": 1594395562
                    },
                    "batteryVoltage": {
                      "timestamp": 1594395562
                    },
                    "imei": {
                      "timestamp": 1594395562
                    },
                    "board": {
                      "timestamp": 1594395562
                    },
                    "appVersion": {
                      "timestamp": 1594395562
                    },
                    "appName": {
                      "timestamp": 1594395562
                    }
                  },
                  "serviceInfo": {
                    "ui": [
                      {
                        "timestamp": 1594395562
                      },
                      {
                        "timestamp": 1594395562
                      },
                      {
                        "timestamp": 1594395562
                      },
                      {
                        "timestamp": 1594395562
                      },
                      {
                        "timestamp": 1594395562
                      },
                      {
                        "timestamp": 1594395562
                      }
                    ],
                    "fota_v1": [
                      {
                        "timestamp": 1594395562
                      },
                      {
                        "timestamp": 1594395562
                      }
                    ]
                  }
                },
                "config": {
                  "GPS": {
                    "enable": {
                      "timestamp": 1594295362
                    }
                  }
                }
              }
            }
          },
          "version": {
            "type": "number",
            "format": "double",
            "example": 8115
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "DeviceName": {
        "type": "string",
        "description": "Friendly device name. Can be used for searching and filtering devices.",
        "pattern": "^(.){1,128}$"
      },
      "deviceTypes": {
        "enum": [
          "Gateway",
          "BLE",
          "Generic"
        ],
        "type": "string"
      },
      "Nominal_string.Url_": {
        "type": "string"
      },
      "Url": {
        "$ref": "#/components/schemas/Nominal_string.Url_",
        "format": "url"
      },
      "DeviceDocMeta": {
        "properties": {
          "version": {
            "type": "string",
            "example": 4.421
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "required": [
          "version"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "DeviceFirmwareArgs": {
        "description": "All device firmware to be stored in elasticsearch should have this format",
        "properties": {
          "supports": {
            "items": {
              "type": "string",
              "enum": [
                "APP",
                "MODEM",
                "BOOT",
                "SOFTDEVICE",
                "BOOTLOADER"
              ]
            },
            "type": "array",
            "example": [
              "BOOT",
              "APP",
              "MODEM",
              "SOFTDEVICE"
            ]
          },
          "app": {
            "properties": {
              "version": {
                "type": "string"
              },
              "name": {
                "type": "string"
              }
            },
            "type": "object"
          },
          "bleSupport": {
            "type": "boolean"
          },
          "boot": {
            "type": "string"
          },
          "modem": {
            "type": "string"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "DeviceDocMetaArgs": {
        "properties": {
          "version": {
            "type": "string"
          },
          "createdAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          },
          "updatedAt": {
            "anyOf": [
              {
                "type": "string",
                "format": "date-time"
              },
              {
                "type": "string"
              }
            ]
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "GenericDevice": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/DeviceId",
            "example": "nrf-123456789012345"
          },
          "name": {
            "$ref": "#/components/schemas/DeviceName",
            "example": "WarehouseEastTemp1"
          },
          "image": {
            "$ref": "#/components/schemas/Url",
            "example": "https://device-images.nrfcloud.com/7c219c23-644e-4565-9fe7-6c56ab8bf949_nrf-123456789012345_a2ca62a47d.png"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/DeviceTag"
            },
            "type": "array",
            "example": [
              "warehouse-east",
              "temperature"
            ]
          },
          "tenantId": {
            "$ref": "#/components/schemas/TenantId",
            "example": "7c219c23-644e-4565-9fe7-6c56ab8bf949"
          },
          "subType": {
            "anyOf": [
              {
                "$ref": "#/components/schemas/NonGatewayIPDeviceSubType"
              },
              {
                "type": "string"
              }
            ]
          },
          "firmware": {
            "$ref": "#/components/schemas/DeviceFirmwareArgs"
          },
          "$meta": {
            "$ref": "#/components/schemas/DeviceDocMeta"
          },
          "type": {
            "$ref": "#/components/schemas/deviceTypes.Generic"
          },
          "state": {
            "$ref": "#/components/schemas/GenericDeviceState"
          }
        },
        "required": [
          "id",
          "tenantId",
          "name",
          "type",
          "subType",
          "tags",
          "$meta"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "deviceTypes.BLE": {
        "enum": [
          "BLE"
        ],
        "type": "string"
      },
      "BLEDeviceSubType": {
        "enum": [
          "generic-ble-device",
          "nordic-ble-device",
          "beacon",
          "unknown"
        ],
        "type": "string"
      },
      "Descriptors": {
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "properties": {
            "value": {
              "items": {
                "type": "number",
                "format": "double"
              },
              "type": "array"
            },
            "path": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "required": [
            "value",
            "path",
            "uuid"
          ],
          "type": "object"
        }
      },
      "Characteristics": {
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "properties": {
            "descriptors": {
              "$ref": "#/components/schemas/Descriptors"
            },
            "properties": {
              "properties": {
                "broadcast": {
                  "type": "boolean"
                },
                "authorizedSignedWrite": {
                  "type": "boolean"
                },
                "indicate": {
                  "type": "boolean"
                },
                "notify": {
                  "type": "boolean"
                },
                "write": {
                  "type": "boolean"
                },
                "writeWithoutResponse": {
                  "type": "boolean"
                },
                "read": {
                  "type": "boolean"
                }
              },
              "type": "object"
            },
            "value": {
              "items": {
                "type": "number",
                "format": "double"
              },
              "type": "array"
            },
            "handle": {
              "type": "number",
              "format": "double"
            },
            "path": {
              "type": "string"
            },
            "uuid": {
              "type": "string"
            }
          },
          "required": [
            "descriptors",
            "properties",
            "value",
            "path",
            "uuid"
          ],
          "type": "object"
        }
      },
      "BLEDeviceState": {
        "properties": {},
        "type": "object",
        "additionalProperties": {
          "properties": {
            "characteristics": {
              "$ref": "#/components/schemas/Characteristics"
            },
            "uuid": {
              "type": "string"
            }
          },
          "required": [
            "characteristics",
            "uuid"
          ],
          "type": "object"
        },
        "example": {
          "FE59": {
            "characteristics": {
              "8EC90003F3154F609FB8838830DAEA50": {
                "path": "FE59/8EC90003F3154F609FB8838830DAEA50",
                "descriptors": {
                  "2902": {
                    "path": "FE59/8EC90003F3154F609FB8838830DAEA50/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "8EC90003F3154F609FB8838830DAEA50",
                "value": [],
                "properties": {
                  "indicate": true,
                  "write": true
                }
              }
            },
            "uuid": "FE59"
          },
          "EF6804009B3549339B1052FFA9740042": {
            "characteristics": {
              "EF6804099B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804099B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804099B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804099B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804019B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804019B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6804019B3549339B1052FFA9740042",
                "value": [
                  232,
                  3,
                  244,
                  1,
                  244,
                  1,
                  10,
                  0,
                  1
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6804029B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804029B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804029B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804029B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804049B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804049B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804049B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804049B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804039B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804039B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804039B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804039B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804079B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804079B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804079B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804079B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804059B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804059B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804059B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804059B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804089B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804089B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804089B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804089B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF68040A9B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF68040A9B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF68040A9B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF68040A9B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6804069B3549339B1052FFA9740042": {
                "path": "EF6804009B3549339B1052FFA9740042/EF6804069B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6804009B3549339B1052FFA9740042/EF6804069B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6804069B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              }
            },
            "uuid": "EF6804009B3549339B1052FFA9740042"
          },
          "EF6801009B3549339B1052FFA9740042": {
            "characteristics": {
              "EF6801089B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801089B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801089B3549339B1052FFA9740042",
                "value": [
                  0,
                  15,
                  2
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6801069B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801069B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801069B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6801079B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801079B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801079B3549339B1052FFA9740042",
                "value": [
                  2,
                  1,
                  0
                ],
                "properties": {
                  "read": true
                }
              },
              "EF6801049B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801049B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801049B3549339B1052FFA9740042",
                "value": [
                  6,
                  0,
                  24,
                  0,
                  0,
                  0,
                  64,
                  1
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6801059B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801059B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801059B3549339B1052FFA9740042",
                "value": [
                  3,
                  103,
                  111,
                  111,
                  46,
                  103,
                  108,
                  47,
                  112,
                  73,
                  87,
                  100,
                  105,
                  114
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6801019B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801019B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801019B3549339B1052FFA9740042",
                "value": [
                  70,
                  53,
                  58,
                  57,
                  67
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6801029B3549339B1052FFA9740042": {
                "path": "EF6801009B3549339B1052FFA9740042/EF6801029B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6801029B3549339B1052FFA9740042",
                "value": [
                  96,
                  2,
                  180
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              }
            },
            "uuid": "EF6801009B3549339B1052FFA9740042"
          },
          "EF6803009B3549339B1052FFA9740042": {
            "characteristics": {
              "EF6803029B3549339B1052FFA9740042": {
                "path": "EF6803009B3549339B1052FFA9740042/EF6803029B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6803009B3549339B1052FFA9740042/EF6803029B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6803029B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6803019B3549339B1052FFA9740042": {
                "path": "EF6803009B3549339B1052FFA9740042/EF6803019B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6803019B3549339B1052FFA9740042",
                "value": [
                  2,
                  5,
                  100,
                  50,
                  0
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6803039B3549339B1052FFA9740042": {
                "path": "EF6803009B3549339B1052FFA9740042/EF6803039B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6803039B3549339B1052FFA9740042",
                "value": [
                  0,
                  0,
                  0,
                  0
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              }
            },
            "uuid": "EF6803009B3549339B1052FFA9740042"
          },
          "EF6805009B3549339B1052FFA9740042": {
            "characteristics": {
              "EF6805019B3549339B1052FFA9740042": {
                "path": "EF6805009B3549339B1052FFA9740042/EF6805019B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6805019B3549339B1052FFA9740042",
                "value": [
                  1,
                  1
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              },
              "EF6805029B3549339B1052FFA9740042": {
                "path": "EF6805009B3549339B1052FFA9740042/EF6805029B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6805029B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "writeWithoutResponse": true
                }
              },
              "EF6805039B3549339B1052FFA9740042": {
                "path": "EF6805009B3549339B1052FFA9740042/EF6805039B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6805009B3549339B1052FFA9740042/EF6805039B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6805039B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6805049B3549339B1052FFA9740042": {
                "path": "EF6805009B3549339B1052FFA9740042/EF6805049B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6805009B3549339B1052FFA9740042/EF6805049B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6805049B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              }
            },
            "uuid": "EF6805009B3549339B1052FFA9740042"
          },
          "180F": {
            "characteristics": {
              "2A19": {
                "path": "180F/2A19",
                "descriptors": {
                  "2902": {
                    "path": "180F/2A19/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "2A19",
                "value": [
                  36
                ],
                "properties": {
                  "read": true,
                  "notify": true
                }
              }
            },
            "uuid": "180F"
          },
          "EF6802009B3549339B1052FFA9740042": {
            "characteristics": {
              "EF6802059B3549339B1052FFA9740042": {
                "path": "EF6802009B3549339B1052FFA9740042/EF6802059B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6802009B3549339B1052FFA9740042/EF6802059B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6802059B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6802049B3549339B1052FFA9740042": {
                "path": "EF6802009B3549339B1052FFA9740042/EF6802049B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6802009B3549339B1052FFA9740042/EF6802049B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6802049B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6802039B3549339B1052FFA9740042": {
                "path": "EF6802009B3549339B1052FFA9740042/EF6802039B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6802009B3549339B1052FFA9740042/EF6802039B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6802039B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6802019B3549339B1052FFA9740042": {
                "path": "EF6802009B3549339B1052FFA9740042/EF6802019B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6802009B3549339B1052FFA9740042/EF6802019B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6802019B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6802029B3549339B1052FFA9740042": {
                "path": "EF6802009B3549339B1052FFA9740042/EF6802029B3549339B1052FFA9740042",
                "descriptors": {
                  "2902": {
                    "path": "EF6802009B3549339B1052FFA9740042/EF6802029B3549339B1052FFA9740042/2902",
                    "uuid": "2902",
                    "value": [
                      0
                    ]
                  }
                },
                "uuid": "EF6802029B3549339B1052FFA9740042",
                "value": [],
                "properties": {
                  "notify": true
                }
              },
              "EF6802069B3549339B1052FFA9740042": {
                "path": "EF6802009B3549339B1052FFA9740042/EF6802069B3549339B1052FFA9740042",
                "descriptors": {},
                "uuid": "EF6802069B3549339B1052FFA9740042",
                "value": [
                  208,
                  7,
                  208,
                  7,
                  208,
                  7,
                  220,
                  5,
                  2,
                  103,
                  78,
                  29
                ],
                "properties": {
                  "read": true,
                  "write": true
                }
              }
            },
            "uuid": "EF6802009B3549339B1052FFA9740042"
          }
        }
      },
      "BLEDevice": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/DeviceId",
            "example": "CA:B2:31:EE:E0:9E"
          },
          "name": {
            "$ref": "#/components/schemas/DeviceName",
            "example": "WarehouseEastTemp1"
          },
          "image": {
            "$ref": "#/components/schemas/Url",
            "example": "https://device-images.nrfcloud.com/7c219c23-644e-4565-9fe7-6c56ab8bf949_nrf-123456789012345_a2ca62a47d.png"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/DeviceTag"
            },
            "type": "array",
            "example": [
              "warehouse-east",
              "temperature"
            ]
          },
          "tenantId": {
            "$ref": "#/components/schemas/TenantId",
            "example": "7c219c23-644e-4565-9fe7-6c56ab8bf949"
          },
          "subType": {
            "$ref": "#/components/schemas/BLEDeviceSubType"
          },
          "firmware": {
            "$ref": "#/components/schemas/DeviceFirmwareArgs"
          },
          "$meta": {
            "$ref": "#/components/schemas/DeviceDocMeta"
          },
          "type": {
            "$ref": "#/components/schemas/deviceTypes.BLE"
          },
          "gatewayId": {
            "$ref": "#/components/schemas/DeviceId",
            "example": "7c219c23-925a-4565-9fe7-5b48ab8bf949"
          },
          "state": {
            "$ref": "#/components/schemas/BLEDeviceState"
          }
        },
        "required": [
          "id",
          "tenantId",
          "name",
          "type",
          "subType",
          "tags",
          "$meta",
          "gatewayId"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "deviceTypes.Gateway": {
        "enum": [
          "Gateway"
        ],
        "type": "string"
      },
      "SoftGatewayType": {
        "enum": [
          "soft",
          "android",
          "iphone",
          "rasppi",
          "windows"
        ],
        "type": "string"
      },
      "HardGatewaySubType": {
        "enum": [
          "jitp-apricity-gateway",
          "unknown"
        ],
        "type": "string"
      },
      "GatewayDeviceSubType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/SoftGatewayType"
          },
          {
            "$ref": "#/components/schemas/HardGatewaySubType"
          }
        ]
      },
      "Record_string.any-or-undefined_": {
        "properties": {},
        "type": "object",
        "description": "Construct a type with a set of properties K of type T"
      },
      "AnyKeyedObject": {
        "$ref": "#/components/schemas/Record_string.any-or-undefined_",
        "description": "Keyed object with any value. Encapsulates any usage."
      },
      "DeviceShadow": {
        "properties": {
          "reported": {
            "$ref": "#/components/schemas/AnyKeyedObject",
            "example": {
              "connected": false,
              "sessionIdentifier": "8a00a643-4991-4174-a1c6-9511e18ba7cb",
              "genericInfo": {
                "versions": {
                  "library": "unknown",
                  "gateway": "2.1.0"
                },
                "platform": {
                  "name": "cordova",
                  "version": ""
                }
              },
              "stage": "prod",
              "desiredConnections": [
                {
                  "address": {
                    "address": "C22973F0-C1CA-496E-559C-7EE4EEF296E5",
                    "type": "randomStatic"
                  },
                  "id": "C22973F0-C1CA-496E-559C-7EE4EEF296E5",
                  "connectOptions": {
                    "security": {
                      "initiate": true
                    }
                  }
                }
              ],
              "name": "",
              "statusConnections": {
                "C22973F0-C1CA-496E-559C-7EE4EEF296E5": {
                  "id": "C22973F0-C1CA-496E-559C-7EE4EEF296E5",
                  "status": {
                    "connected": false,
                    "connecting": false
                  }
                }
              }
            }
          },
          "desired": {
            "$ref": "#/components/schemas/AnyKeyedObject",
            "example": {
              "stage": "prod",
              "desiredConnections": [
                {
                  "address": {
                    "address": "C22973F0-C1CA-496E-559C-7EE4EEF296E5",
                    "type": "randomStatic"
                  },
                  "id": "C22973F0-C1CA-496E-559C-7EE4EEF296E5",
                  "connectOptions": {
                    "security": {
                      "initiate": true
                    }
                  }
                }
              ]
            }
          },
          "delta": {
            "$ref": "#/components/schemas/AnyKeyedObject"
          },
          "metadata": {
            "$ref": "#/components/schemas/AnyKeyedObject",
            "example": {
              "desired": {
                "stage": {
                  "timestamp": 1594146861
                },
                "desiredConnections": [
                  {
                    "address": {
                      "address": {
                        "timestamp": 1594146996
                      },
                      "type": {
                        "timestamp": 1594146996
                      }
                    },
                    "id": {
                      "timestamp": 1594146996
                    },
                    "connectOptions": {
                      "security": {
                        "initiate": {
                          "timestamp": 1594146996
                        }
                      }
                    }
                  }
                ]
              },
              "reported": {
                "connected": {
                  "timestamp": 1594227217
                },
                "sessionIdentifier": {
                  "timestamp": 1594227217
                },
                "genericInfo": {
                  "versions": {
                    "library": {
                      "timestamp": 1594226746
                    },
                    "gateway": {
                      "timestamp": 1594226746
                    }
                  },
                  "platform": {
                    "name": {
                      "timestamp": 1594226746
                    },
                    "version": {
                      "timestamp": 1594226746
                    }
                  }
                },
                "stage": {
                  "timestamp": 1594226746
                },
                "desiredConnections": [
                  {
                    "address": {
                      "address": {
                        "timestamp": 1594146997
                      },
                      "type": {
                        "timestamp": 1594146997
                      }
                    },
                    "id": {
                      "timestamp": 1594146997
                    },
                    "connectOptions": {
                      "security": {
                        "initiate": {
                          "timestamp": 1594146997
                        }
                      }
                    }
                  }
                ],
                "name": {
                  "timestamp": 1594146997
                },
                "statusConnections": {
                  "C22973F0-C1CA-496E-559C-7EE4EEF296E5": {
                    "id": {
                      "timestamp": 1594226766
                    },
                    "status": {
                      "connected": {
                        "timestamp": 1594226766
                      },
                      "connecting": {
                        "timestamp": 1594226766
                      }
                    }
                  }
                }
              }
            }
          },
          "version": {
            "type": "number",
            "format": "double"
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "GatewayDevice": {
        "properties": {
          "id": {
            "$ref": "#/components/schemas/DeviceId",
            "example": "7c219c23-925a-4565-9fe7-5b48ab8bf949"
          },
          "name": {
            "$ref": "#/components/schemas/DeviceName",
            "example": "WarehouseEastTemp1"
          },
          "image": {
            "$ref": "#/components/schemas/Url",
            "example": "https://device-images.nrfcloud.com/7c219c23-644e-4565-9fe7-6c56ab8bf949_nrf-123456789012345_a2ca62a47d.png"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/DeviceTag"
            },
            "type": "array",
            "example": [
              "warehouse-east",
              "temperature"
            ]
          },
          "tenantId": {
            "$ref": "#/components/schemas/TenantId",
            "example": "7c219c23-644e-4565-9fe7-6c56ab8bf949"
          },
          "subType": {
            "$ref": "#/components/schemas/GatewayDeviceSubType"
          },
          "firmware": {
            "$ref": "#/components/schemas/DeviceFirmwareArgs"
          },
          "$meta": {
            "$ref": "#/components/schemas/DeviceDocMeta"
          },
          "type": {
            "$ref": "#/components/schemas/deviceTypes.Gateway"
          },
          "state": {
            "$ref": "#/components/schemas/DeviceShadow"
          }
        },
        "required": [
          "id",
          "tenantId",
          "name",
          "type",
          "subType",
          "tags",
          "$meta"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Device": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/GenericDevice"
          },
          {
            "$ref": "#/components/schemas/BLEDevice"
          },
          {
            "$ref": "#/components/schemas/GatewayDevice"
          }
        ]
      },
      "JSONataTransformedResponse": {
        "description": "Response body transformed by JSONata expression. For more info see `Transforms` in the official [Guides](/#/docs)."
      },
      "PaginatedResult_Device-or-JSONataTransformedResponse_": {
        "properties": {
          "items": {
            "items": {
              "anyOf": [
                {
                  "$ref": "#/components/schemas/Device"
                },
                {
                  "$ref": "#/components/schemas/JSONataTransformedResponse"
                }
              ]
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PageSort": {
        "type": "string",
        "enum": [
          "asc",
          "desc"
        ],
        "default": "desc",
        "example": "desc",
        "description": "Sort order for the paginated results => asc (ascending; default) or desc (descending)."
      },
      "MqttTopic": {
        "type": "string",
        "example": "d/7e8f29fa-cb04-4351-a7c4-3917649d2d36/d2c/bulk",
        "description": "A string specifying an MQTT topic."
      },
      "Message": {
        "$ref": "#/components/schemas/AnyKeyedObject"
      },
      "DeviceMessageInput": {
        "properties": {
          "topic": {
            "$ref": "#/components/schemas/MqttTopic"
          },
          "message": {
            "$ref": "#/components/schemas/Message",
            "example": [
              {
                "temp": 59,
                "units": "F",
                "ts": 1631470795000
              },
              {
                "temp": 54,
                "units": "F",
                "ts": 1631557195000,
                "overrideDeviceId": "nrf-123456789013456"
              }
            ]
          }
        },
        "required": [
          "message"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "VersionSpecifier": {
        "type": "string",
        "description": "Document version specifier",
        "pattern": "(^\\*)|(^\\d+\\.\\d+)|(^\\d+)$"
      },
      "BLEScanType": {
        "enum": [
          0,
          1
        ],
        "type": "number"
      },
      "BLEScanConfig": {
        "description": "Parameters for configuring a BLE scan operation.",
        "properties": {
          "scanType": {
            "$ref": "#/components/schemas/BLEScanType",
            "description": "Use `0` for Regular and `1` for Beacon. Default = `0`."
          },
          "scanTimeout": {
            "type": "integer",
            "format": "int32",
            "description": "Scan timeout between `1` and `65535` seconds, `0` disables timeout. Default = `3`.",
            "default": "3",
            "minimum": 1,
            "maximum": 65535
          },
          "scanReporting": {
            "type": "string",
            "enum": [
              "instant",
              "batch"
            ],
            "description": "Use `batch` to send one message for all advertisements received on scan timeout. Use `instant` if every advertisement received shall be sent instantly. Default = `instant`.",
            "default": "instant"
          },
          "filter": {
            "properties": {
              "rssi": {
                "type": "number",
                "format": "double",
                "description": "Lowest accepted RSSI value for scan report. `0` disables filter."
              },
              "name": {
                "type": "string",
                "description": "Match start of advertisement name. Case sensitive."
              }
            },
            "type": "object"
          }
        },
        "required": [
          "scanTimeout"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "DeviceStateInput": {
        "properties": {
          "reported": {
            "properties": {},
            "additionalProperties": {},
            "type": "object",
            "example": {
              "device": {
                "serviceInfo": {
                  "fota_v1": [
                    "APP",
                    "MODEM"
                  ]
                }
              }
            }
          },
          "desired": {
            "properties": {},
            "additionalProperties": {},
            "type": "object",
            "example": {
              "someField1": {
                "someField2": "someValue2"
              }
            }
          }
        },
        "type": "object",
        "additionalProperties": false
      },
      "RestApiPayload": {
        "type": "string",
        "maxLength": 1333333
      },
      "CreateSoftGatewayPayload": {
        "properties": {
          "cognitoIdentityId": {
            "type": "string"
          },
          "softGatewayType": {
            "$ref": "#/components/schemas/SoftGatewayType"
          }
        },
        "required": [
          "cognitoIdentityId"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "RestApiPayloadContentTypeWithZip": {
        "enum": [
          "text/plain;charset=UTF8",
          "text/plain;charset=ASCII",
          "text/plain",
          "application/octet-stream",
          "application/zip"
        ],
        "type": "string"
      },
      "Nominal_string.FirmwareVersion_": {
        "type": "string"
      },
      "FirmwareVersion": {
        "$ref": "#/components/schemas/Nominal_string.FirmwareVersion_"
      },
      "BundleId": {
        "type": "string",
        "description": "Unique bundle identifier",
        "pattern": "^(APP|MODEM|BOOT|SOFTDEVICE|BOOTLOADER)\\*[0-9a-zA-Z]{8}\\*.*$"
      },
      "Firmware": {
        "properties": {
          "name": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "version": {
            "$ref": "#/components/schemas/FirmwareVersion"
          },
          "type": {
            "$ref": "#/components/schemas/FirmwareTypes"
          },
          "bundleId": {
            "$ref": "#/components/schemas/BundleId"
          },
          "filenames": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "size": {
            "type": "number",
            "format": "double"
          },
          "lastModified": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "version",
          "type",
          "bundleId",
          "filenames",
          "size"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PaginatedResult_Firmware_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/Firmware"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "FOTAJobExecutionState": {
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/DeviceId"
          },
          "status": {
            "type": "string"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "deviceId",
          "status"
        ],
        "type": "object",
        "additionalProperties": false,
        "example": {
          "deviceId": "366551fb-f0a4-4fe6-866a-ceb6879edd7a",
          "status": "SUCCEEDED",
          "lastUpdatedAt": "2018-01-01T00:00:00.000Z"
        }
      },
      "PaginatedResult_FOTAJobExecutionState_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FOTAJobExecutionState"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "UUID": {
        "type": "string",
        "description": "Universally unique identifier",
        "pattern": "^[a-f0-9]{8}-?[a-f0-9]{4}-?[a-f0-9]{4}-?[a-f0-9]{4}-?[a-f0-9]{12}$"
      },
      "JobId": {
        "$ref": "#/components/schemas/UUID"
      },
      "FotaV2JobExecutionEvents": {
        "type": "string",
        "enum": [
          "QUEUED",
          "IN_PROGRESS",
          "FAILED",
          "SUCCEEDED",
          "TIMED_OUT",
          "CANCELLED",
          "REJECTED",
          "DOWNLOADING"
        ]
      },
      "FotaV2JobDocumentModel": {
        "properties": {
          "firmwareType": {
            "$ref": "#/components/schemas/FirmwareTypes"
          },
          "fileSize": {
            "type": "number",
            "format": "double",
            "example": 512
          },
          "host": {
            "type": "string",
            "example": "firmware.nrfcloud.com"
          },
          "path": {
            "type": "string",
            "example": "b67217f3-c246-4c7c-91b0-214579ce10d0/APP*c52c99d3*v1.3.0-280-g485445b6a869/AT_fast_blink.bin"
          },
          "version": {
            "$ref": "#/components/schemas/FirmwareVersion",
            "example": "v1.3.0-280-g485445b6a869"
          },
          "bundleId": {
            "$ref": "#/components/schemas/BundleId"
          }
        },
        "required": [
          "firmwareType",
          "fileSize",
          "host",
          "path",
          "version",
          "bundleId"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Pick_FotaV2JobExecutionModel.Exclude_keyofFotaV2JobExecutionModel.createdAt-or-lastUpdatedAt-or-deviceId__": {
        "properties": {
          "tenantId": {
            "$ref": "#/components/schemas/TenantId"
          },
          "status": {
            "$ref": "#/components/schemas/FotaV2JobExecutionEvents"
          },
          "executionId": {
            "$ref": "#/components/schemas/UUID"
          },
          "jobId": {
            "$ref": "#/components/schemas/JobId"
          },
          "statusDetail": {
            "type": "string"
          },
          "jobDocument": {
            "$ref": "#/components/schemas/FotaV2JobDocumentModel"
          }
        },
        "required": [
          "tenantId",
          "status",
          "executionId",
          "jobId",
          "jobDocument"
        ],
        "type": "object",
        "description": "From T, pick a set of properties whose keys are in the union K"
      },
      "FOTAJobExecution": {
        "properties": {
          "tenantId": {
            "$ref": "#/components/schemas/TenantId"
          },
          "status": {
            "$ref": "#/components/schemas/FotaV2JobExecutionEvents"
          },
          "executionId": {
            "$ref": "#/components/schemas/UUID"
          },
          "jobId": {
            "$ref": "#/components/schemas/JobId"
          },
          "statusDetail": {
            "type": "string"
          },
          "jobDocument": {
            "$ref": "#/components/schemas/FotaV2JobDocumentModel"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "deviceId": {
            "$ref": "#/components/schemas/DeviceId"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "tenantId",
          "status",
          "executionId",
          "jobId",
          "jobDocument",
          "createdAt",
          "deviceId",
          "lastUpdatedAt"
        ],
        "type": "object",
        "additionalProperties": false,
        "example": {
          "status": "SUCCEEDED",
          "deviceId": "nrfsim-453330795897806100000",
          "createdAt": "2020-12-09T18:34:13.472Z",
          "executionId": "4d50a3ba-9573-4ec9-b362-02e2bde5aaee",
          "jobDocument": {
            "path": "3701edba-5bd5-4fcf-a0d1-769457a8f409/APP*c52c99d3*v1.3.0-280-g485445b6a869/AT_fast_blink.bin",
            "host": "firmware.nrfcloud.com",
            "firmwareType": "APP",
            "fileSize": 253640,
            "version": "v1.3.0-280-g485445b6a869"
          },
          "jobId": "f539350f-7784-470c-b0cf-c669147b0c54",
          "lastUpdatedAt": "2020-12-09T18:34:18.731Z",
          "tenantId": "3701edba-5bd5-4fcf-a0d1-769457a8f409",
          "statusDetail": "Job Completed"
        }
      },
      "PaginatedResult_FOTAJobExecution_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FOTAJobExecution"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateJobInputTags": {
        "properties": {
          "bundleId": {
            "$ref": "#/components/schemas/BundleId",
            "description": "A unique id created by the server when the firmware was uploaded (concatenation of firmware type, random string, and firmware version)."
          },
          "autoApply": {
            "type": "boolean",
            "description": "If set to false the job will not be applied immediately, but instead will be left in the \"CREATED\" status.\nThe job can later be applied using POST /fota-jobs/{jobId}/apply",
            "default": "true"
          },
          "name": {
            "type": "string",
            "description": "Friendly name for this job",
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "description": "Short description for this job",
            "maxLength": 1024
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/DeviceTag"
            },
            "type": "array",
            "description": "A list of tags to apply the device to",
            "minItems": 1
          }
        },
        "required": [
          "bundleId",
          "tags"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateJobInputBase": {
        "properties": {
          "bundleId": {
            "$ref": "#/components/schemas/BundleId",
            "description": "A unique id created by the server when the firmware was uploaded (concatenation of firmware type, random string, and firmware version)."
          },
          "autoApply": {
            "type": "boolean",
            "description": "If set to false the job will not be applied immediately, but instead will be left in the \"CREATED\" status.\nThe job can later be applied using POST /fota-jobs/{jobId}/apply",
            "default": "true"
          },
          "name": {
            "type": "string",
            "description": "Friendly name for this job",
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "description": "Short description for this job",
            "maxLength": 1024
          }
        },
        "required": [
          "bundleId"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateJobInputDeviceIds": {
        "properties": {
          "bundleId": {
            "$ref": "#/components/schemas/BundleId",
            "description": "A unique id created by the server when the firmware was uploaded (concatenation of firmware type, random string, and firmware version)."
          },
          "autoApply": {
            "type": "boolean",
            "description": "If set to false the job will not be applied immediately, but instead will be left in the \"CREATED\" status.\nThe job can later be applied using POST /fota-jobs/{jobId}/apply",
            "default": "true"
          },
          "name": {
            "type": "string",
            "description": "Friendly name for this job",
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "description": "Short description for this job",
            "maxLength": 1024
          },
          "deviceIds": {
            "items": {
              "$ref": "#/components/schemas/DeviceId"
            },
            "type": "array",
            "description": "A list of device identifiers assigned to this job.",
            "minItems": 1
          }
        },
        "required": [
          "bundleId",
          "deviceIds"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CreateJobInputDeviceIdentifiers": {
        "properties": {
          "bundleId": {
            "$ref": "#/components/schemas/BundleId",
            "description": "A unique id created by the server when the firmware was uploaded (concatenation of firmware type, random string, and firmware version)."
          },
          "autoApply": {
            "type": "boolean",
            "description": "If set to false the job will not be applied immediately, but instead will be left in the \"CREATED\" status.\nThe job can later be applied using POST /fota-jobs/{jobId}/apply",
            "default": "true"
          },
          "name": {
            "type": "string",
            "description": "Friendly name for this job",
            "maxLength": 64
          },
          "description": {
            "type": "string",
            "description": "Short description for this job",
            "maxLength": 1024
          },
          "deviceIdentifiers": {
            "items": {
              "$ref": "#/components/schemas/DeviceId"
            },
            "type": "array",
            "description": "A list of device identifiers assigned to this job.",
            "minItems": 1,
            "deprecated": true
          }
        },
        "required": [
          "bundleId",
          "deviceIdentifiers"
        ],
        "type": "object",
        "additionalProperties": false,
        "deprecated": true
      },
      "CreateJobInputIdOrIdentifier": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CreateJobInputDeviceIds"
          },
          {
            "$ref": "#/components/schemas/CreateJobInputDeviceIdentifiers"
          }
        ]
      },
      "CreateJobInputTagsAndDeviceIds": {
        "allOf": [
          {
            "$ref": "#/components/schemas/CreateJobInputBase"
          },
          {
            "$ref": "#/components/schemas/CreateJobInputTags"
          },
          {
            "$ref": "#/components/schemas/CreateJobInputIdOrIdentifier"
          }
        ]
      },
      "CreateJobInput": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/CreateJobInputTags"
          },
          {
            "$ref": "#/components/schemas/CreateJobInputTagsAndDeviceIds"
          },
          {
            "$ref": "#/components/schemas/CreateJobInputIdOrIdentifier"
          }
        ]
      },
      "FotaV2JobTargetModel": {
        "properties": {
          "deviceIds": {
            "items": {
              "$ref": "#/components/schemas/DeviceId"
            },
            "type": "array"
          },
          "tags": {
            "items": {
              "$ref": "#/components/schemas/DeviceTag"
            },
            "type": "array"
          }
        },
        "required": [
          "deviceIds",
          "tags"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "FotaV2JobEvents": {
        "type": "string",
        "enum": [
          "CREATED",
          "IN_PROGRESS",
          "CANCELLED",
          "DELETION_IN_PROGRESS",
          "COMPLETED"
        ]
      },
      "FOTAV2Job": {
        "properties": {
          "jobId": {
            "$ref": "#/components/schemas/JobId"
          },
          "target": {
            "$ref": "#/components/schemas/FotaV2JobTargetModel"
          },
          "description": {
            "type": "string"
          },
          "status": {
            "$ref": "#/components/schemas/FotaV2JobEvents"
          },
          "statusDetail": {
            "type": "string"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "lastUpdatedAt": {
            "type": "string",
            "format": "date-time"
          },
          "completedAt": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "executionStats": {
            "properties": {
              "completedExecutions": {
                "type": "number",
                "format": "double"
              },
              "executions": {
                "type": "number",
                "format": "double"
              },
              "timedOut": {
                "type": "number",
                "format": "double"
              },
              "removed": {
                "type": "number",
                "format": "double"
              },
              "inProgress": {
                "type": "number",
                "format": "double"
              },
              "queued": {
                "type": "number",
                "format": "double"
              },
              "rejected": {
                "type": "number",
                "format": "double"
              },
              "failed": {
                "type": "number",
                "format": "double"
              },
              "succeeded": {
                "type": "number",
                "format": "double"
              },
              "cancelled": {
                "type": "number",
                "format": "double"
              }
            },
            "required": [
              "completedExecutions",
              "executions",
              "timedOut",
              "removed",
              "inProgress",
              "queued",
              "rejected",
              "failed",
              "succeeded",
              "cancelled"
            ],
            "type": "object"
          },
          "firmware": {
            "properties": {
              "bundleId": {
                "$ref": "#/components/schemas/BundleId"
              },
              "host": {
                "type": "string"
              },
              "fileSize": {
                "type": "number",
                "format": "double"
              },
              "firmwareType": {
                "$ref": "#/components/schemas/FirmwareTypes"
              },
              "version": {
                "$ref": "#/components/schemas/FirmwareVersion"
              },
              "uris": {
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "required": [
              "bundleId",
              "host",
              "fileSize",
              "firmwareType",
              "version",
              "uris"
            ],
            "type": "object"
          }
        },
        "required": [
          "jobId",
          "target",
          "status",
          "executionStats",
          "firmware"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PaginatedResult_FOTAV2Job_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/FOTAV2Job"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AgpsResponseBuffer": {
        "type": "string",
        "format": "byte",
        "example": "<Buffer>",
        "description": "Chunk of the file according to the request Range header."
      },
      "RequestType": {
        "enum": [
          "rtLocation",
          "rtAssistance",
          "custom"
        ],
        "type": "string"
      },
      "NrfMessageType": {
        "description": "The possible types of AGPS data.",
        "enum": [
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10
        ],
        "type": "number"
      },
      "Mcc": {
        "type": "number",
        "format": "double",
        "example": 310,
        "description": "Mobile CountryFactory Code. See <a href=\"https://en.wikipedia.org/wiki/Mobile_country_code\" target=\"_blank\">Wikipedia</a> for more details."
      },
      "Mnc": {
        "type": "number",
        "format": "double",
        "example": 120,
        "description": "Mobile Network Code. See <a href=\"https://en.wikipedia.org/wiki/Mobile_country_code\" target=\"_blank\">Wikipedia</a> for more details."
      },
      "Tac": {
        "type": "number",
        "format": "double",
        "example": 13601,
        "description": "Tracking Area Code. Identifies a group of LTE cells in a certain region (Tracking Area). See <a href=\"https://www.sharetechnote.com/html/Handbook_LTE_Tracking_Area.html\" target=\"_blank\">this overview</a> for more details.\n<a href=\"https://www.youtube.com/watch?v=2Dso9zg29hQ\" target=\"_blank\">This video</a> offers a high level explanation of how TAC fits into the bigger picture."
      },
      "Eci": {
        "type": "number",
        "format": "double",
        "example": 167899669,
        "description": "E-UTRA Cell Identifier (UC-Id), 28 bits (20 bits eNodeB and 8 bits Cell ID).\nMCC + MNC + CID uniquely identifies the LTE cell, TAC is optional. 0 .. 268435455"
      },
      "Rsrp": {
        "type": "number",
        "format": "double",
        "example": -90,
        "description": "Reference Signal Received Power. Measured in dBm. See <a href=\"https://www.rfwireless-world.com/Terminology/LTE-RSRP-vs-RSRQ.html\" target=\"_blank\">this page</a> for more details. Range -157..-44"
      },
      "FilteredEphemerisFlag": {
        "type": "boolean",
        "example": true,
        "description": "Send this flag if you want to receive ephemeris for only satellites in view.\nnRF Cloud will return ephemeris for up to 16 satellites. Cell tower data\n(eci, mcc, mnc, tac) is required. Defaults to false."
      },
      "SatelliteMaskAngle": {
        "type": "number",
        "format": "double",
        "example": true,
        "description": "Filtered ephemeris mask angle. Only works in conjunction with the filtered\nflag. Controls the mask angle for which the satellites are filtered. Range 0..90\nDefaults to 5"
      },
      "AgpsBuffer": {
        "properties": {},
        "type": "object",
        "additionalProperties": false
      },
      "LocationServiceType.MCELL": {
        "enum": [
          "MCELL"
        ],
        "type": "string"
      },
      "LocationServiceType.SCELL": {
        "enum": [
          "SCELL"
        ],
        "type": "string"
      },
      "LocationServiceType.MCELL_EVAL": {
        "enum": [
          "MCELL_EVAL"
        ],
        "type": "string"
      },
      "LocationServiceType.SCELL_EVAL": {
        "enum": [
          "SCELL_EVAL"
        ],
        "type": "string"
      },
      "CellServiceType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/LocationServiceType.MCELL"
          },
          {
            "$ref": "#/components/schemas/LocationServiceType.SCELL"
          },
          {
            "$ref": "#/components/schemas/LocationServiceType.MCELL_EVAL"
          },
          {
            "$ref": "#/components/schemas/LocationServiceType.SCELL_EVAL"
          }
        ]
      },
      "Latitude": {
        "type": "number",
        "format": "double",
        "example": 45.524098,
        "description": "Global grid line, north to south. Vertical."
      },
      "Longitude": {
        "type": "number",
        "format": "double",
        "example": -122.688408,
        "description": "Global grid line, east to west. Horizontal."
      },
      "Uncertainty": {
        "type": "number",
        "format": "double",
        "example": 300,
        "description": "Radius of the uncertainty circle around the location in meters. Also known as Horizontal Positioning Error (HPE)."
      },
      "PositionResponse": {
        "properties": {
          "lat": {
            "$ref": "#/components/schemas/Latitude"
          },
          "lon": {
            "$ref": "#/components/schemas/Longitude"
          },
          "uncertainty": {
            "$ref": "#/components/schemas/Uncertainty"
          }
        },
        "required": [
          "lat",
          "lon",
          "uncertainty"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CellResponseWithFulfillment": {
        "properties": {
          "lat": {
            "$ref": "#/components/schemas/Latitude"
          },
          "lon": {
            "$ref": "#/components/schemas/Longitude"
          },
          "uncertainty": {
            "$ref": "#/components/schemas/Uncertainty"
          },
          "fulfilledWith": {
            "$ref": "#/components/schemas/CellServiceType"
          }
        },
        "required": [
          "lat",
          "lon",
          "uncertainty",
          "fulfilledWith"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "Earfcn": {
        "type": "number",
        "format": "double",
        "example": 41490,
        "description": "Evolved Absolute Radio Frequency Channel (E-ARFCN). Range: 0..262143"
      },
      "TimingAdvance": {
        "type": "number",
        "format": "double",
        "example": 20000,
        "description": "The length of time a signal takes to reach the base station from a mobile phone (half of rtt=round trip time). The units are symbols (Ts) as specified in 3GPP TS 36.211 (LTE). The expected resolution for nRF Cloud API is 1 Ts. Range 0..20512."
      },
      "Rsrq": {
        "type": "number",
        "format": "double",
        "example": -8,
        "description": "Reference Signal Received Quality. Measured in dB. <a href=\"https://www.rfwireless-world.com/Terminology/LTE-RSRP-vs-RSRQ.html\" target=\"_blank\">this page</a> for more details. Range -34.5..3.5"
      },
      "Pci": {
        "type": "number",
        "format": "double",
        "example": 143,
        "description": "Physical Cell Identity (PCI). Range: 0..503"
      },
      "TimeDiff": {
        "type": "number",
        "format": "double",
        "example": 300,
        "description": "Milliseconds that the neighbor tower was observed after the serving tower was observed. Improves accuracy for devices in motion."
      },
      "LteNeighborMeasurement": {
        "description": "Neighbor cell tower information. Increases location accuracy when included in request.",
        "properties": {
          "earfcn": {
            "$ref": "#/components/schemas/Earfcn"
          },
          "pci": {
            "$ref": "#/components/schemas/Pci"
          },
          "rsrp": {
            "$ref": "#/components/schemas/Rsrp"
          },
          "rsrq": {
            "$ref": "#/components/schemas/Rsrq"
          },
          "timeDiff": {
            "$ref": "#/components/schemas/TimeDiff"
          }
        },
        "required": [
          "earfcn",
          "pci"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "LteCellTower": {
        "description": "LTE cell tower information. Use the 'nmr' property to send neighbor cell measurements for increased accuracy.",
        "properties": {
          "mcc": {
            "$ref": "#/components/schemas/Mcc"
          },
          "mnc": {
            "$ref": "#/components/schemas/Mnc"
          },
          "eci": {
            "$ref": "#/components/schemas/Eci"
          },
          "tac": {
            "$ref": "#/components/schemas/Tac"
          },
          "earfcn": {
            "$ref": "#/components/schemas/Earfcn"
          },
          "adv": {
            "$ref": "#/components/schemas/TimingAdvance"
          },
          "rsrp": {
            "$ref": "#/components/schemas/Rsrp"
          },
          "rsrq": {
            "$ref": "#/components/schemas/Rsrq"
          },
          "nmr": {
            "items": {
              "$ref": "#/components/schemas/LteNeighborMeasurement"
            },
            "type": "array"
          }
        },
        "required": [
          "mcc",
          "mnc",
          "eci",
          "tac"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "CellRequest": {
        "properties": {
          "lte": {
            "items": {
              "$ref": "#/components/schemas/LteCellTower"
            },
            "type": "array"
          }
        },
        "required": [
          "lte"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "GpsServiceType": {
        "enum": [
          "GPS"
        ],
        "type": "string"
      },
      "LocationHistoryServiceType": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/LocationServiceType"
          },
          {
            "$ref": "#/components/schemas/GpsServiceType"
          }
        ]
      },
      "LocationType": {
        "enum": [
          "coarse",
          "fine"
        ],
        "type": "string"
      },
      "TrackerLatitude": {
        "type": "string",
        "example": "45.524098",
        "description": "GPS latitude."
      },
      "TrackerLongitude": {
        "type": "string",
        "example": "-122.688408",
        "description": "GPS Longitude."
      },
      "TrackerUncertainty": {
        "type": "string",
        "example": "934",
        "description": "Radius of the uncertainty circle around the location in meters. Also known as Horizontal Positioning Error (HPE)."
      },
      "LocationTrackerItem": {
        "properties": {
          "deviceId": {
            "$ref": "#/components/schemas/DeviceId"
          },
          "serviceType": {
            "$ref": "#/components/schemas/LocationHistoryServiceType"
          },
          "type": {
            "$ref": "#/components/schemas/LocationType"
          },
          "insertedAt": {
            "$ref": "#/components/schemas/ISODateTimeString"
          },
          "lat": {
            "$ref": "#/components/schemas/TrackerLatitude"
          },
          "lon": {
            "$ref": "#/components/schemas/TrackerLongitude"
          },
          "uncertainty": {
            "$ref": "#/components/schemas/TrackerUncertainty"
          }
        },
        "required": [
          "deviceId",
          "serviceType",
          "type",
          "insertedAt",
          "lat",
          "lon",
          "uncertainty"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PaginatedResult_LocationTrackerItem_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/LocationTrackerItem"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PgpsHost": {
        "type": "string",
        "example": "pgps.nrfcloud.com",
        "description": "The protocol agnostic URL for accessing PGPS prediction files."
      },
      "PgpsFilePath": {
        "type": "string",
        "example": "public/15131-0_15135-72000.bin",
        "description": "The path to the file that contains PGPS prediction data."
      },
      "PredictionCount": {
        "type": "number",
        "format": "double",
        "description": "The number of predictions requested. Default is 42 (7 days, 6 predictions per day). Valid range 1..168\nThe number of possible predictions rdepends on StartGpsDay and PredictionInterval"
      },
      "PredictionInterval": {
        "type": "number",
        "format": "double",
        "description": "The time between predictions (in minutes). Defaults to 240 (4 hours). Valid values are: 120,240,360,480"
      },
      "StartGpsDay": {
        "type": "number",
        "format": "double",
        "example": 15131,
        "description": "The start day of the prediction set as GPS Day (days since the GPS epoch). Defaults to current GPS day.\nValid range currentGpsDay..currentGpsDay + 14."
      },
      "StartGpsTime": {
        "type": "number",
        "format": "double",
        "description": "The start time of the prediction set as seconds in day. Defaults to 0. Valid range 0..86399"
      },
      "SingleCellResponseBuffer": {
        "type": "string",
        "format": "byte",
        "example": "<Buffer>",
        "description": "Lat/lon/uncertainty as a binary struct."
      },
      "CellResponse": {
        "$ref": "#/components/schemas/PositionResponse"
      },
      "SingleCellFormat": {
        "description": "Format of the single-cell GET endpoint request. Defaults to binary.",
        "enum": [
          "json",
          "binary"
        ],
        "type": "string"
      },
      "WifiResponse": {
        "$ref": "#/components/schemas/PositionResponse"
      },
      "Frequency": {
        "type": "number",
        "format": "double",
        "example": 2412,
        "description": "Channel frequency in MHz"
      },
      "MacAddress": {
        "type": "string",
        "description": "String comprised of 6 hexadecimal pairs, separated by colons or dashes"
      },
      "SignalStrength": {
        "type": "number",
        "format": "double",
        "example": -42,
        "description": "Signal strength in dBm, between -128 and 0"
      },
      "AccessPointWithFrequency": {
        "properties": {
          "macAddress": {
            "$ref": "#/components/schemas/MacAddress"
          },
          "ssid": {
            "type": "string"
          },
          "signalStrength": {
            "$ref": "#/components/schemas/SignalStrength"
          },
          "frequency": {
            "$ref": "#/components/schemas/Frequency"
          }
        },
        "required": [
          "macAddress"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "WifiChannel": {
        "type": "number",
        "format": "double",
        "example": 12
      },
      "AccessPointWithChannel": {
        "properties": {
          "macAddress": {
            "$ref": "#/components/schemas/MacAddress"
          },
          "ssid": {
            "type": "string"
          },
          "signalStrength": {
            "$ref": "#/components/schemas/SignalStrength"
          },
          "channel": {
            "$ref": "#/components/schemas/WifiChannel"
          }
        },
        "required": [
          "macAddress"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "AccessPoint": {
        "anyOf": [
          {
            "$ref": "#/components/schemas/AccessPointWithFrequency"
          },
          {
            "$ref": "#/components/schemas/AccessPointWithChannel"
          }
        ]
      },
      "WifiRequest": {
        "properties": {
          "accessPoints": {
            "items": {
              "$ref": "#/components/schemas/AccessPoint"
            },
            "type": "array"
          }
        },
        "required": [
          "accessPoints"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "DeviceMessage": {
        "properties": {
          "tenantId": {
            "$ref": "#/components/schemas/TenantId",
            "example": "a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9"
          },
          "topic": {
            "$ref": "#/components/schemas/MqttTopic",
            "example": "prod/a5592ec1-18ae-4d9d-bc44-1d9bd927bbe9/nrf-123456/m/d/stuff"
          },
          "deviceId": {
            "$ref": "#/components/schemas/DeviceId",
            "example": "nrf-123456789013456"
          },
          "receivedAt": {
            "type": "string",
            "format": "date-time",
            "example": "2020-06-25T21:05:12.830Z"
          },
          "message": {
            "$ref": "#/components/schemas/AnyKeyedObject",
            "example": {
              "temp": 59,
              "units": "F",
              "ts": 1631557195000,
              "overrideDeviceId": "nrf-123456789013456"
            }
          }
        },
        "required": [
          "tenantId",
          "topic",
          "deviceId",
          "receivedAt",
          "message"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "PaginatedResult_DeviceMessage_": {
        "properties": {
          "items": {
            "items": {
              "$ref": "#/components/schemas/DeviceMessage"
            },
            "type": "array"
          },
          "total": {
            "type": "integer",
            "format": "int32",
            "description": "Reflects the total results, not just the total returned by a singular page of results.",
            "example": 1
          },
          "pageNextToken": {
            "type": "string",
            "description": "Token used to retrieve the next page of items in the list. Present in a response only if the total available results exceeds the specified limit per page. This token does not change between requests.",
            "example": "4bb1f9ab35bd"
          }
        },
        "required": [
          "items"
        ],
        "type": "object",
        "additionalProperties": false
      },
      "MessageAppId": {
        "type": "string",
        "example": "TEMP",
        "maxLength": 64
      }
    },
    "securitySchemes": {
      "Simple Token": {
        "type": "http",
        "scheme": "Bearer",
        "description": "Endpoints that specify Authorizations of \"Simple Token\" require you to send your API key\nin the `Authorization` header, e.g., using cURL: `-H \"Authorization: Bearer\nd8be845e816e45d4a9529a6cfcd459c88e3c22b5\"`. Your API key can be found in\nthe Account section of nRFCloud.com.\n\nFor more information, see the [nRF Cloud REST Authentication documentation](https://docs.nrfcloud.com/Reference/Interacting/REST#authentication).\n"
      },
      "JSON Web Token": {
        "type": "http",
        "scheme": "Bearer",
        "description": "Endpoints that specify Authorizations of \"JSON Web Token\" require you to send a JWT\nin the `Authorization` header, e.g., using cURL: `-H \"Authorization: Bearer\neyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJkZXZpY2VJZGVudGlmaWVyIjoiZmIwOWNkZmItZTY4Yy00NGUzLWIwMTQtMmJlZDc4Yzk3OTQ5In0.RUAWePWjqRn4TK6EXsiKrsMM69FqDjg7dn52hrqG8CM\"`.\n\nFor more information on the required JWT algorithm, payload contents and how to generate JWTs, see the [nRF Cloud REST Authentication documentation](https://docs.nrfcloud.com/Reference/Interacting/REST#authentication).\n"
      },
      "Service Evaluation Token": {
        "type": "http",
        "scheme": "Bearer",
        "description": "Endpoints that specify Authorizations using a \"Service Evaluation Token\" may be called in the same way as you see above with [JSON Web Tokens](#section/Authentication/JSON+Web+Token).\nThis token can be obtained by calling the [GetServiceEvaluationToken](#operation/GetServiceEvaluationToken) endpoint.\n"
      }
    }
  },
  "info": {
    "title": "nRF Cloud REST API",
    "version": "v1",
    "description": "# Overview\n  <a href='https://nrfcloud.com'><img\n        src='https://docs.dev.nrfcloud.com/img/nrfcloud-logo-notext.svg'\n        alt='nRF Cloud logo'\n        style='background-color:#00A9CE;float:right;width:100px;height:100px;'/></a>The [nRF Cloud](https://www.nordicsemi.com/Software-and-tools/Development-Tools/nRF-Cloud)\n        REST API allows you to programmatically interact with, and retrieve historical information generated by, any device that you have\n        connected to nRFCloud.com. This includes both IP-based devices–that is, devices that have an IP address and can talk directly to our\n        IoT platform–and Bluetooth Low Energy (BLE) devices, which require the use of an IP-based device (a gateway).\n\nThe REST API documentation is a supplement to the <a href='https://docs.nrfcloud.com'>main nRF Cloud documentation</a>.\n\n# Error Codes\nSome of the endpoints return specific error codes (called 'nRF Codes'), which can be found in this table.\n  <table>\n      <thead>\n      <tr>\n          <th style='width:10%'>nRF&nbsp;Code</th>\n          <th style='width:20%'>Error</th>\n          <th style='width:35%'>Reason</th>\n          <th style='width:35%'>Solution</th>\n      </tr>\n      </thead>\n      <tbody>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40000'>40000</div>\n          </td>\n          <td valign='top'>Bad request error.</td>\n          <td valign='top'>This error could mean many things. Most of the time it means something is not as expected\n              on the cloud like a file was missing or an internal service failed.\n          </td>\n          <td valign='top'>Alert Nordic support by filing a ticket on <a href='https://devzone.nordicsemi.com/'\n                                                                          target='_blank'>DevZone</a>.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40001'>40001</div>\n          </td>\n          <td valign='top'>Device does not have a valid device certificate for associating (adding) it to your\n              account.\n          </td>\n          <td valign='top'>Your nRF9160 DK device does not have a 'just-in-time provisioning' (JITP) certificate, or\n              the certificate has been corrupted.\n          </td>\n          <td valign='top'>Refer to the <a\n                  href='https://infocenter.nordicsemi.com/topic/ug_nrf91_dk_gsg/UG/nrf91_DK_gsg/intro.html'>nRF9160 DK\n              Getting Started Guide</a> for information on upgrading your device certificate.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40002'>40002</div>\n          </td>\n          <td valign='top'>Device cannot be dissociated (removed from your account).</td>\n          <td valign='top'>The nRF9160 DK you are trying to dissociate was added to your account using the legacy\n              pairing mechanism (button and switch pattern) instead of the <code>AssociateDevice</code> <a\n                      href='#operation/AssociateDevice'>endpoint</a>.\n          </td>\n          <td valign='top'>Delete the device from your account using either the <code>Configure</code> &gt; <code>Delete\n              Device</code> menu item on nrfcloud.com or the <code>DeleteDevice</code> <a\n                  href='#operation/DeleteDevice'>endpoint</a>. If you want to re-add this device to your account you\n              will first have to flash a new device certificate and upgrade the firmware. Please refer to the <a\n                      href='https://infocenter.nordicsemi.com/topic/ug_nrf91_dk_gsg/UG/nrf91_DK_gsg/intro.html'>nRF9160\n                  DK Getting Started Guide</a> or <a\n                      href='https://infocenter.nordicsemi.com/topic/ug_thingy91/UG/thingy91/getting_started/getting_started_intro.html'>Thingy:91 Getting Started Guide</a> for information on how to do this.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40100'>40100</div>\n          </td>\n          <td valign='top'>Access denied error.</td>\n          <td valign='top'>The user making the request does not have access to the requested resource (device, SIM,\n              invitation, etc.).\n          </td>\n          <td valign='top'>Confirm your API Key is correct.</td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40101'>40101</div>\n          </td>\n          <td valign='top'>Device is already associated with another account.</td>\n          <td valign='top'>Another user has already added this device to their account.</td>\n          <td valign='top'>If you know the other account owner you can request that they dissociate the device so that\n              you can add it to your account. Otherwise, this operation is not allowed.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40102'>40102</div>\n          </td>\n          <td valign='top'>The ownership code is invalid for this device.</td>\n          <td valign='top'>You entered the wrong ownership code (PIN or HWID) that is printed on the Nordic\n              Semiconductor product label, or which you submitted when creating a new device certificate.\n          </td>\n          <td valign='top'>Verify the PIN or HWID and enter it correctly.</td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40103'>40103</div>\n          </td>\n          <td valign='top'>This device is not associated with your account.</td>\n          <td valign='top'>The device you want to dissociate (remove from your account) is not found in your\n              account.\n          </td>\n          <td valign='top'>None. You are not allowed to do this.</td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40411'>40411</div>\n          </td>\n          <td valign='top'>A Nordic Semiconductor product with this device id and ownership code could not be found.\n          </td>\n          <td valign='top'>The device id you entered matches the format for a Nordic Semiconductor product, but the\n              device id and/or ownership code cannot be found in our system.\n          </td>\n          <td valign='top'>Compare the values you entered with what is printed on your product's label (for devices\n              with <code>IMEI</code> printed on the label, the device id will be <code>nrf-[IMEI]</code>, e.g., <code>nrf-123456789012345</code>).\n              If you submitted the correct values, please contact Nordic Semiconductor Tech Support for further\n              assistance.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40412'>40412</div>\n          </td>\n          <td valign='top'>No device found for this id. The device has not yet been provisioned.</td>\n          <td valign='top'>The device cannot be found in the device registry, i.e., it is not 'known' by the IoT cloud\n              platform. Possible reasons:<br><br>\n              <ol>\n                  <li>You entered the device id and/or ownership code (PIN or HWID) incorrectly.\n                  <li>Before attempting association, you did not wait for the LEDs to indicate the device was\n                      provisioned.\n                  </li>\n                  <li>Corrupt modem firmware.</li>\n                  <li>Corrupt, wrongly flashed, or illegitimate device certificates.</li>\n                  <li>Poor LTE connection</li>\n              </ol>\n          </td>\n          <td valign='top'>Solutions that match the possible reasons are listed here. For items 2-4, refer to the <a\n                  href='https://infocenter.nordicsemi.com/topic/ug_nrf91_dk_gsg/UG/nrf91_DK_gsg/intro.html'>nRF9160 DK\n              Getting Started Guide</a> or <a\n                      href='https://infocenter.nordicsemi.com/topic/ug_thingy91/UG/thingy91/getting_started/getting_started_intro.html'>Thingy:91 Getting Started Guide</a>.<br><br>\n              <ol>\n                  <li>Verify the values and try again. For Nordic Semiconductor products, please see the solution for\n                      nRF Code 40411, above.\n                  <li>Check the LED status indicators to ensure the device indicates it was provisioned.</li>\n                  <li>(Re-)flash the latest modem firmware.</li>\n                  <li>Flash new device certificates obtained from the <code>CreateDeviceCertificate</code> <a\n                          href='#operation/CreateDeviceCertificate'>endpoint</a>.\n                  </li>\n                  <li>Move to a location with a better LTE connection.</li>\n              </ol>\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40413'>40413</div>\n          </td>\n          <td valign='top'>No device found for this id.</td>\n          <td valign='top'>You are trying to dissociate a device that is not found in your account (wrong device id),\n              or you are submitting the device's friendly name, not the id.\n          </td>\n          <td valign='top'>Verify you are passing the correct device id (not the friendly name you may have given\n              it).\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/40414'>40414</div>\n          </td>\n          <td valign='top'>No device found for this id.</td>\n          <td valign='top'>You are trying to delete a device that was not found in your account or in the IoT registry\n              (i.e., provisioned, but not yet added to your account).\n          </td>\n          <td valign='top'><em>This may not be an error</em>, because the device may already be deleted. Verify you entered\n              the correct device id and ownership code (PIN or HWID on the label). For Nordic Semiconductor products,\n              see the solution for nRF Code 40411, above.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/41600'>41600</div>\n          </td>\n          <td valign='top'>Range not satisfiable.</td>\n          <td valign='top'>You are calling an endpoint that uses the Range header and the byte range does not exist in\n              the target file or the range header itself is malformed.\n          </td>\n          <td valign='top'>Check the expected file size for the target file and ensure the range requested exists.\n              Refer to the <a href='https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Range' target='_blank'>range\n                  header docs</a> for more information.\n          </td>\n      </tr>\n      <tr>\n          <td valign='top'>\n              <div data-section-id='section/ErrorCodes/42200'>42200</div>\n          </td>\n          <td valign='top'>Validation failed.</td>\n          <td valign='top'>You are calling an endpoint with invalid request data.</td>\n          <td valign='top'>Check the expected request format and try again.</td>\n      </tr>\n      </tbody>\n  </table>\n\n# Authentication\n\n<!-- ReDoc-Inject: <security-definitions> -->",
    "x-logo": {
      "url": "https://www.nordicsemi.com/svg/Logo_Trans_RGB_Vertical-optimized.svg",
      "altText": "nRF Cloud logo",
      "backgroundColor": "#FFFFFF",
      "href": "https://nordicsemi.com"
    }
  },
  "openapi": "3.0.0",
  "paths": {
    "/account": {
      "get": {
        "operationId": "FetchAccountInfo",
        "responses": {
          "200": {
            "description": "Contains account information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoArgs"
                }
              }
            }
          }
        },
        "description": "Fetch general account information",
        "summary": "FetchAccountInfo",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": []
      }
    },
    "/account/usage": {
      "get": {
        "operationId": "FetchApiUsage",
        "responses": {
          "200": {
            "description": "Contains tenant usage information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_UsageRecord_"
                }
              }
            }
          }
        },
        "description": "Fetch tenant usage record for FOTA and Location service usage.\n\nFetch metrics for a given month\n```sh\ncurl -G $API_HOST/v1/account/usage -d partialDate=\"2021-01\" -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: application/json\"\n```\nFetch metrics for a given day\n```sh\ncurl -G $API_HOST/v1/account/usage -d partialDate=\"2021-01-01\" -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: application/json\"\n```",
        "summary": "FetchApiUsage",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "description": "Date for metrics usage. There are two formats for partial date: 1. \"YYYY-MM\" - all metrics usage for a particular month 2. \"YYYY-MM-DD\" - all metrics usage for a particular day. If  no partial date is given day usage for all services will be returned.",
            "in": "query",
            "name": "partialDate",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MetricIntervalDatePart"
            }
          },
          {
            "in": "query",
            "name": "limit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/account/certificates": {
      "post": {
        "operationId": "CreateAccountDeviceAndCertificate",
        "responses": {
          "201": {
            "description": "Successfully created an account device and certificate",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCertificate"
                }
              }
            }
          }
        },
        "description": "Provision a device and attach an IoT policy with permissions that grant access to MQTT topics for any device in your account.\nThis type of device can be useful in apps that need an MQTT client to monitor the messages on other devices, or for debugging and testing purposes.",
        "summary": "CreateAccountDeviceAndCertificate",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": []
      },
      "get": {
        "operationId": "ListAccountDeviceCertificates",
        "responses": {
          "200": {
            "description": "A paginated list of certificates",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_CertificateListItem_"
                }
              }
            }
          }
        },
        "description": "List certificates for account devices.",
        "summary": "ListAccountDeviceCertificates",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/account/certificates/{certificateId}": {
      "delete": {
        "operationId": "DeleteAccountDeviceAndCertificate",
        "responses": {
          "202": {
            "description": "An empty response"
          }
        },
        "description": "Delete an account device and its certificate.",
        "summary": "DeleteAccountDeviceAndCertificate",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "certificateId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CertificateId"
            }
          }
        ]
      }
    },
    "/account/service-evaluation-token": {
      "post": {
        "operationId": "GenerateServiceEvaluationToken",
        "responses": {
          "200": {
            "description": "Contains newly generated Service Evaluation Token for evaluation purposes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceEvaluationTokenResponse"
                }
              }
            }
          }
        },
        "description": "Generates a JSON Web Token (JWT) for evaluating nRF Cloud Location Services by proxy servers. You may use this token to authenticate proxy server requests to any of the Location Service endpoints that indicate `Service Evaluation Token` among their Authorizations.\n\nCalling this endpoint for the first time will start your 30-day evaluation period,\nafter which you will need to contact [Nordic Sales](https://www.nordicsemi.com/About-us/Contact-Us) if you want to extend your evaluation period, or enter into a business agreement for commercial cloud-to-cloud use.\n\nThe JWT claims are set automatically by nRF Cloud when this token is generated. Although it can be regenerated upon request, the initial 30-day trial period remains unchanged.\n\nFor more information see\n[nRF Cloud REST API Authentication using JWTs](https://docs.nrfcloud.com/Reference/Interacting/REST#json-web-tokens-jwt).",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": []
      },
      "get": {
        "operationId": "GetServiceEvaluationToken",
        "responses": {
          "200": {
            "description": "Contains Service Evaluation Token for evaluation purposes",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ServiceEvaluationTokenResponse"
                }
              }
            }
          }
        },
        "description": "Returns an existing Service Evaluation Token. Calling this endpoint will not start your evaluation period.\nYou may create one by calling the [GenerateServiceEvaluationToken](#operation/GenerateServiceEvaluationToken) endpoint.",
        "tags": [
          "Account"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": []
      }
    },
    "/bulk-ops-requests/{bulkOpsRequestId}": {
      "get": {
        "operationId": "FetchBulkOpsRequest",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BulkOpsRequestDetails"
                }
              }
            }
          }
        },
        "description": "Fetch a bulk operations request.",
        "summary": "FetchBulkOpsRequest",
        "tags": [
          "Bulk Ops Requests"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bulkOpsRequestId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ULID"
            }
          }
        ]
      }
    },
    "/bulk-ops-requests": {
      "get": {
        "operationId": "ListBulkOpsRequests",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_BulkOpsRequestDetails_"
                }
              }
            }
          }
        },
        "description": "Fetch a list of bulk operations requests.",
        "summary": "ListBulkOpsRequests",
        "tags": [
          "Bulk Ops Requests"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/BulkOpsRequestStatus"
            }
          },
          {
            "in": "query",
            "name": "startRequestedAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "endRequestedAt",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "default": 10,
              "format": "double",
              "type": "number"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/association/{deviceId}": {
      "put": {
        "operationId": "AssociateDevice",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Add a device to your nRF Cloud account. The association process is idempotent. You may therefore use this endpoint to update your device's `subType`. For more on the use of `subType` see the [ProvisionDevices endpoint](#operation/ProvisionDevices).\n```sh\ncurl -X PUT $API_HOST/v1/association/$DEVICE_ID -d \"$DEVICE_OWNERSHIP_CODE\" -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: text/plain\"\n```\n__Potential error codes__: 40001, 40101, 40102, 40411, 40412. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "AssociateDevice",
        "tags": [
          "IP Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "query",
            "name": "subType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ThingType"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnershipCode"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DissociateDevice",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "<div style=\"background-color: #f8d7da; color: #721c24; text-align: center; border: 1px solid #f5c6cb; border-radius: .25rem; padding: .75rem 1.25rem\">This endpoint has been deprecated. Please use the <a href=\"#operation/DeleteDevice\">DeleteDevice endpoint</a> instead.</div>\n\nRemove a device from your nRF Cloud account. This does not delete (unprovision) it on nRF Cloud.\n```sh\ncurl -X DELETE $API_HOST/v1/association/$DEVICE_ID -H \"Authorization: Bearer $API_KEY\"\n```\n__Potential error codes__: 40002, 40103, 40413. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "DissociateDevice",
        "tags": [
          "IP Devices"
        ],
        "deprecated": true,
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ]
      }
    },
    "/devices/{deviceId}/certificates": {
      "post": {
        "operationId": "CreateDeviceCertificate",
        "responses": {
          "201": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DeviceCertificate"
                }
              }
            }
          }
        },
        "description": "Creates a just-in-time-provisioning (JITP) certificate for a device using Nordic's registered CA certificate.\nConsider this a convenience endpoint for obtaining a device certificate, with the following disadvantages:\n\n1. The JITP process takes approximately 30 seconds and involves multiple connects and disconnects between your MQTT client and the AWS IoT broker.\n2. You cannot use your own CA certificate.\n3. This endpoint does not support bulk operations.\n4. You will have to explicitly [associate](/v1#operation/AssociateDevice) a JITP device with your account.\n\nIn most cases you will want to use the [ProvisionDevices endpoint](/v1#operation/ProvisionDevices), which pre-provisions your device(s) in the cloud and supports zero-touch associations (claims) and bulk operations.\n\nFor this JITP certificate to work properly the device must not yet be provisioned (created) on our platform. If you are creating a certificate for a device that you have already connected to our platform, please delete the device using the `DeleteDevice` [endpoint](#operation/DeleteDevice) before using this certificate.\n\nFor a Nordic Semiconductor product such as an nRF9160-DK or a Thingy-91, the `deviceId` is `nrf-[IMEI]`, e.g., `nrf-111222333444555`. The IMEI can be found on your product's label.\n\nIf you want to create a certificate for a non-Nordic device, any `deviceId` is sufficient that does not start with `nrf-` (we recommend using a GUID).\n```sh\ncurl -X POST $API_HOST/v1/devices/$DEVICE_ID/certificates -d \"$DEVICE_OWNERSHIP_CODE\" -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: text/plain\"\n```\n__Potential error codes__: 40411. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "CreateDeviceCertificate",
        "tags": [
          "IP Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnershipCode"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/characteristics/{characteristicId}": {
      "get": {
        "operationId": "FetchCharacteristicValue",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "number",
                    "format": "double"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Fetch the latest characteristic value that is cached as part of the device state in our database. It may not fetch the latest characteristic value that is on the device (which can take a quite long to retrieve directly via a REST). Therefore, this value can be stale. If you want the latest it is best to first call the `StartBLEDeviceDiscovery` [endpoint](#operation/StartBLEDeviceDiscovery) to force a rediscovery of the BLE device state.",
        "summary": "FetchCharacteristicValue",
        "tags": [
          "Bluetooth Low Energy Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "characteristicId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CharacteristicId"
            }
          }
        ]
      },
      "put": {
        "operationId": "UpdateCharacteristicValue",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "summary": "UpdateCharacteristicValue",
        "tags": [
          "Bluetooth Low Energy Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "characteristicId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CharacteristicId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "type": "array"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/characteristics/{characteristicId}/descriptors/{descriptorId}": {
      "get": {
        "operationId": "FetchCharacteristicDescriptorValue",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "type": "number",
                    "format": "double"
                  },
                  "type": "array"
                }
              }
            }
          }
        },
        "description": "Fetch the latest characteristic descriptor value that is cached as part of the device state in our database. It may not fetch the latest characteristic descriptor value that is on the device (which can take a quite long to retrieve directly via a REST). Therefore, this value can be stale. If you want the latest it is best to first call the `StartBLEDeviceDiscovery` [endpoint](#operation/StartBLEDeviceDiscovery) to force a rediscovery of the BLE device state.",
        "summary": "FetchDescriptorValue",
        "tags": [
          "Bluetooth Low Energy Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "characteristicId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CharacteristicId"
            }
          },
          {
            "in": "path",
            "name": "descriptorId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DescriptorId"
            }
          }
        ]
      },
      "put": {
        "operationId": "UpdateCharacteristicDescriptorValue",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "summary": "UpdateDescriptorValue",
        "tags": [
          "Bluetooth Low Energy Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "characteristicId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/CharacteristicId"
            }
          },
          {
            "in": "path",
            "name": "descriptorId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DescriptorId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "type": "number",
                  "format": "double"
                },
                "type": "array"
              }
            }
          }
        }
      }
    },
    "/devices": {
      "post": {
        "operationId": "ProvisionDevices",
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bulkOpsRequestId": {
                      "$ref": "#/components/schemas/ULID"
                    }
                  },
                  "required": [
                    "bulkOpsRequestId"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed"
          }
        },
        "description": "[Provision](https://docs.nrfcloud.com/Reference/DeviceManagement/Provisioning) and associate one or more devices with your nRF Cloud account by posting CSV data.\n\nUnlike the [CreateDeviceCertificate endpoint](#operation/CreateDeviceCertificate), this endpoint involves your own CA certificate and\nrequires you to upload device certificates that you have already obtained, whether via a CSR produced by the `AT%KEYGEN` command\n(modem firmware v1.3+), or offline via your own script. We impose no rules on your CA certificate, and a self-signed certificate may be used.\nFor more information see the [Getting Started with Your Devices guide](https://docs.nrfcloud.com/Guides/GettingStarted/Devices).\n\nWhether using our APIs via REST or MQTT you will need to flash to your device:\n1. <a href=\"https://www.amazontrust.com/repository/AmazonRootCA1.pem\" target=\"_blank\">The Amazon Root CA1 PEM file</a>, which enables the device to authenticate the AWS IoT server.\n2. The private key associated with the device certificate.\n\nAdditionally, if the device will be using MQTT, you will also need to flash the device certificate. For [signing JWTs](#section/Authentication/JSON%20Web%20Token) you will use the private key associated\nwith the certificate. (During the device provisioning process we extract the corresponding public key from your uploaded certificate and use this for JWT signature verification.)\n\nThis endpoint supports [asynchronous bulk operations](#tag/Bulk-Ops-Requests). Your data will be validated, and if valid, you\nwill receive an HTTP 202 response with a `bulkOpsRequestId`. You can use this id with the bulk ops endpoints\nto track the request's processing status. If the bulk ops request indicates FAILED status, check the JSON errors file (URL in the bulk\nops request details), fix the offending rows, then re-submit the CSV with only those rows.\n\nEach CSV row must in the format `deviceId,[subType],[tags],[fwTypes],\"certPem\"`, where:\n\n|Field|Required?|Description|Validation Pattern|\n|---|:---:|---|---|\n|`deviceId`<div style=\"width:90px\"></div>|Yes|A globally unique device id (UUIDs are highly recommended)|`/^[a-z0-9:_-]{1,128}$/i`|\n|`subType`|No|A custom [device type](https://docs.nrfcloud.com/Reference/Devices/Types) (e.g., `humidity-sensor`) to help you better recognize or categorize your devices. Include \"gateway\" in your subType if you want to provision it as a `Gateway`. This will give the device additional MQTT permissions for gateway-related topics. Otherwise it is provisioned as a `Generic` device.|`/[a-zA-Z0-9_.,@\\/:#-]{0,799}/`|\n|`tags`|No|A list of pipe-delimited tags to create groups of devices (e.g., `warehouse\\|sensor\\|east`)|Each tag:<br/>`/^[a-zA-Z0-9_.@:#-]+$/`|\n|`fwTypes`|No|A list of pipe-delimited firmware types that each device supports for FOTA (e.g., `APP\\|MODEM`)|Each type:<br/>`/^(APP\\|MODEM\\|BOOT\\|SOFTDEVICE\\|BOOTLOADER)$/`|\n|`certPem`|Yes|A unique [ES256](https://ldapwiki.com/wiki/ES256) X.509 certificate in PEM format, wrapped in double quotes (to allow for line breaks in CSV)|`/^-{5}BEGIN CERTIFICATE-{5}(\\r\\n\\|\\r\\|\\n)([^-]+)(\\r\\n\\|\\r\\|\\n)-{5}END CERTIFICATE-{5}(\\r\\n\\|\\r\\|\\n)$/`|\n\nExamples of CSV rows:\n   #### All values set\n<span style=\"font-family:Courier\">f69c0e45-7f04-4949-8def-bb2215b4223e,my-thing-type,tag1|tag2,APP|MODEM,\"-----BEGIN CERTIFICATE-----<br/>MIIB7DCCAZMCFD...Av3CVgjzn5BLS03X7lyf4w==<br/>\n-----END CERTIFICATE-----<br/>\"</span>\n   #### `subType` not set\n<span style=\"font-family:Courier\">f69c0e45-7f04-4949-8def-bb2215b4223e,,tag1|tag2,APP|MODEM,\"-----BEGIN CERTIFICATE-----<br/>MIIB7DCCAZMCFD...Av3CVgjzn5BLS03X7lyf4w==<br/>\n-----END CERTIFICATE-----<br/>\"</span>\n   #### `subType` and `tags` not set, but supported `fwTypes` are set\n<span style=\"font-family:Courier\">f69c0e45-7f04-4949-8def-bb2215b4223e,,,APP|MODEM,\"-----BEGIN CERTIFICATE-----<br/>MIIB7DCCAZMCFD...Av3CVgjzn5BLS03X7lyf4w==<br/>\n-----END CERTIFICATE-----<br/>\"</span>\n\nAlso note:\n   * Max number of rows is 1000.\n   * Do not use a header.\n   * Do not leave any blank lines.\n\nExample of uploading CSV data as a binary file:\n\n```sh\ncurl -X POST $API_HOST/v1/devices \\\n--data-binary @$PATH_TO_CSV_FILE \\\n-H \"Content-Type: application/octet-stream\" \\\n-H \"Authorization: Bearer $API_KEY\"\n```\nNote that for some unknown reason, curl will strip the final line break in each ES256 cert when sending the CSV file using a non-binary content-type, e.g., using syntax such as `-d @$PATH_TO_CSV_FILE -H \"Content-Type: text/csv\"`. Therefore, with curl use `--data-binary` only. If you want to send the CSV as text, use a REST client like Postman or Insomnia.",
        "summary": "ProvisionDevices",
        "tags": [
          "IP Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "content-type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RestApiPayloadContentTypeWithCsv"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProvisionDevicesPayload"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "ListDevices",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_Device-or-JSONataTransformedResponse_"
                }
              }
            }
          }
        },
        "description": "Fetch a list of devices associated with your account.",
        "summary": "ListDevices",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "description": "If false (the default), the device’s state is not returned, but only the device metadata. This allows you to keep the response size small if needed.",
            "in": "query",
            "name": "includeState",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "If false (the default), the metadata for an IP-based device's state (i.e., timestamps reflecting each property's last updated time) are not returned.",
            "in": "query",
            "name": "includeStateMeta",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "description": "Not a true array of strings, but rather a JSONata expression such as `id` or `{ \"id\": id, \"type\": type }`. For more information see [Transforming JSON Responses guide](https://docs.nrfcloud.com/Guides/UsingREST/Transforms).",
            "in": "query",
            "name": "transform",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageSort",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageSort"
            }
          },
          {
            "description": "If specified, only return devices that have one of these tags AND are accessible by the user's Role and their assigned Device Groups (tags)",
            "in": "query",
            "name": "tags",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DeviceTag"
              }
            }
          },
          {
            "description": "If specified, only return devices with matching identifiers",
            "in": "query",
            "name": "deviceIds",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DeviceId"
              }
            }
          },
          {
            "in": "query",
            "name": "deviceIdentifiers",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/DeviceId"
              }
            },
            "deprecated": true
          },
          {
            "description": "If specified, only return devices that support the given firmware types",
            "in": "query",
            "name": "firmwareSupport",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FirmwareTypes"
              }
            }
          },
          {
            "in": "query",
            "name": "firmwareSupportExclude",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/FirmwareTypes"
              }
            }
          },
          {
            "in": "query",
            "name": "bleFirmwareSupport",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "deviceTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/deviceTypes"
              }
            }
          },
          {
            "in": "query",
            "name": "gatewayId",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "query",
            "name": "subTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ThingType"
              }
            }
          },
          {
            "in": "query",
            "name": "deviceNameFuzzy",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/devices/public-keys": {
      "post": {
        "operationId": "RegisterPublicKeys",
        "responses": {
          "202": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "bulkOpsRequestId": {
                      "$ref": "#/components/schemas/ULID"
                    }
                  },
                  "required": [
                    "bulkOpsRequestId"
                  ],
                  "type": "object"
                }
              }
            }
          },
          "422": {
            "description": "Validation Failed"
          }
        },
        "description": "Register one or more public keys so that the signatures for [JSON Web Tokens (JWTs)](https://docs.nrfcloud.com/Reference/Interacting/REST#json-web-tokens-jwt) sent by the device can be verified.\n\nThis endpoint supports two main use cases:\n1. Devices that <strong>are not provisioned</strong> on nRF Cloud that also want to consume Location Service endpoints over REST. This requires [JWT authentication](https://docs.nrfcloud.com/Reference/Interacting/REST#json-web-tokens-jwt). Please note:\n<ol type=\"a\">\n<li>Unlike Location Services, REST-based consumption of Firmware Over-the-Air Update endpoints requires cloud-provisioning. We recommend using the <a href=\"/v1#operation/ProvisionDevices\">ProvisionDevices endpoint</a>.\n<li>You are still able to cloud-provision devices for which you have registered public keys. There is no conflict there.\n<li>Devices that are not provisioned on nRF Cloud cannot use MQTT.\n</ol>\n2. Devices that <strong>are [provisioned](https://docs.nrfcloud.com/Reference/DeviceManagement/Provisioning)</strong> on nRF Cloud that want to use a dedicated private key for signing JWTs instead of using the key associated\nwith its cloud-provisioning certificate (e.g., they were provisioned with the [ProvisionDevices endpoint](#operation/ProvisionDevices),\nwhich automatically extracts and stores a public key during the provisioning process for use in subsequent JWT signature verifications).\n\nOnly one public key may be registered for each device. Uploading CSV data with a different key for the same device will overwrite the existing key.\n\nPublic keys must be [ES256](https://ldapwiki.com/wiki/ES256). For more information, see the [nRF Cloud REST Authentication documentation](https://docs.nrfcloud.com/Reference/Interacting/REST#authentication).\n\nThis endpoint supports [asynchronous bulk operations](#tag/Bulk-Ops-Requests). Your data will be validated, and if valid, you\nwill receive an HTTP 202 response with a `bulkOpsRequestId`. You can use this id with the bulk ops endpoints\nto track the request's processing status. If the bulk ops request indicates FAILED status, check the JSON errors file (URL in the bulk\nops request details), fix the offending rows, then re-submit the CSV with only those rows.\n\nEach CSV row must in the format `deviceId,\"keyPem\"`, where:\n\n|Field|Required|Description|Validation Pattern|\n|---|:---:|---|---|\n|`deviceId`<div style=\"width:90px\"></div>|Yes|A globally unique device id (UUIDs are highly recommended)|`/^[a-z0-9:_-]{1,128}$/i`|\n|`keyPem`|Yes|A unique [ES256](https://ldapwiki.com/wiki/ES256) public key in PEM format, wrapped in double quotes (to allow for line breaks in CSV)|`/^-{5}BEGIN PUBLIC KEY-{5}(\\r\\n\\|\\r\\|\\n)([^-]+)(\\r\\n\\|\\r\\|\\n)-{5}END PUBLIC KEY-{5}(\\r\\n\\|\\r\\|\\n)$/`|\n\nExample of a CSV row:\n   #### All values set\n<span style=\"font-family:Courier\">f69c0e45-7f04-4949-8def-bb2215b4223e,\"-----BEGIN PUBLIC KEY-----<br/>MIIB7DCCAZMCFD...Av3CVgjzn5BLS03X7lyf4w==<br/>\n-----END PUBLIC KEY-----<br/>\"</span>\n\nAlso note:\n   * Max number of rows is 1000.\n   * Do not use a header.\n   * Do not leave any blank lines.\n\nExample of uploading CSV data as a binary file:\n\n```sh\ncurl -X POST $API_HOST/v1/devices/public-keys \\\n--data-binary @$PATH_TO_CSV_FILE \\\n-H \"Content-Type: application/octet-stream\" \\\n-H \"Authorization: Bearer $API_KEY\"\n```\nNote that for some unknown reason, curl will strip the final line break in each ES256 public key when sending the CSV file using a non-binary content-type, e.g., using syntax such as `-d @$PATH_TO_CSV_FILE -H \"Content-Type: text/csv\"`. Therefore, with curl use `--data-binary` only. If you want to send the CSV as text, use a REST client like Postman or Insomnia.",
        "summary": "RegisterPublicKeys",
        "tags": [
          "IP Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "content-type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RestApiPayloadContentTypeWithCsv"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterPublicKeysPayload"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}": {
      "delete": {
        "operationId": "DeleteDevice",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Delete a device from your account. If you are attempting to delete a Nordic hardware product that was [provisioned](https://docs.nrfcloud.com/Reference/DeviceManagement/Provisioning) but not yet added to your account (associated), you must also pass the ownership code (PIN or HWID on the product label) in the request body.\nThis will forward a DEVICE DISCON message on the /c2d MQTT topic, allowing the device to gracefully disconnect. You can [view the format here](https://github.com/nRFCloud/application-protocols/blob/v1/messages.md).\n```sh\ncurl -X DELETE $API_HOST/v1/devices/$DEVICE_ID -d $DEVICE_OWNERSHIP_CODE -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: text/plain\"\n```\n__Potential error codes__: 40411. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "DeleteDevice",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/OwnershipCode"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "FetchDevice",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/BLEDevice"
                    },
                    {
                      "$ref": "#/components/schemas/GenericDevice"
                    },
                    {
                      "$ref": "#/components/schemas/GatewayDevice"
                    },
                    {
                      "$ref": "#/components/schemas/JSONataTransformedResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "Fetch a device and its state.\n```sh\ncurl $API_HOST/v1/devices/$DEVICE_ID -H \"Authorization: Bearer $API_KEY\"\n```",
        "summary": "FetchDevice",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "description": "Not a true array of strings, but rather a JSONata expression such as `id` or `{ \"id\": id, \"type\": type }`. For more information see [Transforming JSON Responses guide](https://docs.nrfcloud.com/Guides/UsingREST/Transforms).",
            "in": "query",
            "name": "transform",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ]
      }
    },
    "/devices/{gatewayId}/discover/{peripheralId}": {
      "post": {
        "operationId": "StartPeripheralDiscovery",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Initiate a discovery process for a BLE device. When discovery is complete (30-60 seconds), results will be stored\nin our database and retrievable for the device via the `FetchDevice` [endpoint](#operation/FetchDevice).",
        "summary": "StartPeripheralDiscovery",
        "tags": [
          "Bluetooth Low Energy Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "peripheralId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ]
      }
    },
    "/devices/{deviceId}/messages": {
      "post": {
        "operationId": "SendDeviceMessage",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Allows a user or [IP device](https://docs.nrfcloud.com/Reference/Devices/Types) to send a message that is subsequently published over an MQTT topic, on behalf of the IP device whose deviceId is specified. For more information, read about [sending device messages](https://docs.nrfcloud.com/Reference/DeviceMessages#sending-device-messages).",
        "summary": "SendDeviceMessage",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "Simple Token": []
          },
          {
            "JSON Web Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceMessageInput"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/name": {
      "put": {
        "operationId": "UpdateDeviceName",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Update the device name. The default name is the same as the device id.",
        "summary": "UpdateDeviceName",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "header",
            "name": "if-match",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VersionSpecifier"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceName"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/scan": {
      "post": {
        "operationId": "StartScanForBLEDevices",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Initiate a gateway scan for BLE devices.",
        "summary": "StartScanForBLEDevices",
        "tags": [
          "Gateways"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/BLEScanConfig"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/state": {
      "patch": {
        "operationId": "UpdateDeviceState",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Modify the device's state as stored in its shadow. You do not have to pass the entire shadow. You can update a specific portion by setting the correct JSON field path:\n```sh\nexport DEVICE_VERSION=$(curl $API_HOST/v1/devices/$DEVICE_ID -H \"Authorization: Bearer $API_KEY\" | jq -r '.[\"$meta\"].version')\ncurl -X PATCH $API_HOST/v1/devices/$DEVICE_ID/state -d '{ \"reported\": { \"device\": { \"serviceInfo\": { \"fota_v1\": [\"BOOT\"] } } } }' -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: application/json\" -H \"If-Match: $DEVICE_VERSION\"\n```",
        "summary": "UpdateDeviceState",
        "tags": [
          "IP Devices"
        ],
        "security": [
          {
            "Simple Token": []
          },
          {
            "JSON Web Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "header",
            "name": "if-match",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VersionSpecifier"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeviceStateInput"
              }
            }
          }
        }
      }
    },
    "/devices/{deviceId}/tags": {
      "put": {
        "operationId": "UpdateDeviceTags",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Update a device's tags. Useful for labeling, categorizing, grouping, etc.",
        "summary": "UpdateDeviceTags",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "header",
            "name": "if-match",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VersionSpecifier"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "items": {
                  "$ref": "#/components/schemas/DeviceTag"
                },
                "type": "array"
              }
            }
          }
        }
      }
    },
    "/devices/{gatewayId}/{peripheralId}": {
      "put": {
        "operationId": "AddPeripheral",
        "responses": {
          "204": {
            "description": "No content"
          }
        },
        "description": "/**\n Initiate connection of a peripheral to a gateway by adding to the gateway's\n `desired.desiredConnections` array the peripheral id.",
        "summary": "AddPeripheral",
        "tags": [
          "Bluetooth Low Energy Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "gatewayId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "peripheralId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          }
        ]
      }
    },
    "/devices/{deviceId}/image": {
      "put": {
        "operationId": "UpdateDeviceImage",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Update the image associated with a device, as displayed on nrfCloud.com. If uploading an image, add image to the request body (JPEG or PNG only). Otherwise, use the `sourceUrl` query param to set the device image to an existing image on the Web.",
        "summary": "UpdateDeviceImage",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "header",
            "name": "if-match",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VersionSpecifier"
            }
          },
          {
            "in": "query",
            "name": "sourceUrl",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Url"
            }
          }
        ],
        "requestBody": {
          "required": false,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestApiPayload"
              }
            }
          }
        }
      },
      "delete": {
        "operationId": "DeleteDeviceImage",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "For a Web URL of an image associated with a device, dissociate the URL from the device. For an image file stored for a device, delete the image file.",
        "summary": "DeleteDeviceImage",
        "tags": [
          "All Devices"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "header",
            "name": "if-match",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/VersionSpecifier"
            }
          }
        ]
      }
    },
    "/openapi.json": {
      "get": {
        "operationId": "GetSpec",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          }
        },
        "tags": [
          "Misc."
        ],
        "security": [],
        "parameters": []
      }
    },
    "/firmwares": {
      "post": {
        "operationId": "UploadFirmware",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "uris": {
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    }
                  },
                  "required": [
                    "uris"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "description": "Upload a firmware bundle as a .zip file, whether binary or base64-encoded. The bundle must contain a manifest.json file that conforms to this JSON schema:\n```\n{\n name?: string,\n description?: string,\n fwversion: string,\n 'format-version': 1,\n files: {\n   file: string,\n   type: 'application' | 'mcuboot' | 'bootloader' | 'softdevice' | 'init_packet',\n   size: number\n }[]\n}\n```\nNotes:\n- `?` fields are optional\n- `files` is an array of objects, all of which should be of the same `type`. Types `application` and `mcuboot` apply only to nRF91 FOTA. Types `softdevice` and `init_packet` apply only to Bluetooth LE FOTA.\n- `'format-version'` should always be set to `1`\n- `fwversion` is validated against this regular expression: `/^[a-zA-Z0-9.+_-]{1,30}$/`\n- The Zephyr build system produces dfu_application.zip in the build/zephyr folder, which contains a manifest.json plus the update binary. However, the manifest is currently generated without the required `fwversion` field, so you will need to add that field.\n- If you use the nRFCloud.com user interface to upload your zip file, you are given options to fill in the `name`, `description`, and `fwversion` fields. The UI will then properly generate the manifest.json file and zip file.\n- Although nRF Cloud supports modem FOTA, we do not allow uploading modem firmware. These updates are made available only by Nordic Semiconductor.\n\nAn example of a valid manifest:\n```\n{\n \"name\": \"My application update\",\n \"description\": \"Changelog: Fixed an issue with sleep mode. Power consumption improvements.\",\n \"fwversion\": \"1.1\",\n \"format-version\": 1,\n \"files\": [\n     {\n         \"file\": \"my_application_v1_1.hex.bin\",\n         \"type\": \"application\",\n         \"size\": 695672\n     }\n ]\n}\n```\nFollowing are examples of uploading with curl (base64 and binary):\n\n```sh\nexport FILE=$(base64 path/to/my-file.zip)\n# If you get a console error such as \"Argument list too long\" try using a REST client like Postman.\ncurl -X POST $API_HOST/v1/firmwares -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: text/plain\" -d $FILE\n```\n\n```sh\ncurl -X POST $API_HOST/v1/firmwares -H \"Authorization: Bearer $API_KEY\" -H \"Content-Type: application/zip\" --data-binary @/path/to/my-file.zip\n```\nFor more information, see [Getting Started with the FOTA Service](https://docs.nrfcloud.com/Guides/GettingStarted/FOTA/).",
        "summary": "UploadFirmware",
        "tags": [
          "Firmware Bundles"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "header",
            "name": "content-type",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/RestApiPayloadContentTypeWithZip"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RestApiPayload"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "ListFirmware",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_Firmware_"
                }
              }
            }
          }
        },
        "summary": "ListFirmware",
        "tags": [
          "Firmware Bundles"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "description": "Whether or not to return a list of modem firmware instead of the current tenant's firmware",
            "in": "query",
            "name": "modemOnly",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          }
        ]
      }
    },
    "/firmwares/{bundleId}": {
      "delete": {
        "operationId": "DeleteFirmware",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "summary": "DeleteFirmware",
        "tags": [
          "Firmware Bundles"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "bundleId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/BundleId"
            }
          }
        ]
      }
    },
    "/fota-job-execution-statuses/{jobId}": {
      "get": {
        "operationId": "ListFOTAJobExecutionStatuses",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_FOTAJobExecutionState_"
                }
              }
            }
          }
        },
        "summary": "ListFOTAJobExecutionStatuses",
        "tags": [
          "FOTA Job Executions"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          },
          {
            "in": "query",
            "name": "status",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FotaV2JobExecutionEvents"
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/fota-job-executions/{deviceId}": {
      "get": {
        "operationId": "ListFOTAJobExecutionsForDevice",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_FOTAJobExecution_"
                }
              }
            }
          }
        },
        "summary": "ListFOTAJobExecutionsForDevice",
        "tags": [
          "FOTA Job Executions"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/fota-job-executions/{deviceId}/current": {
      "get": {
        "operationId": "FetchCurrentPendingFOTAJobExecution",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOTAJobExecution"
                }
              }
            }
          }
        },
        "description": "Fetches the pending (QUEUED or IN_PROGRESS) job execution with the earliest createdAt date. This will allow\nconsistent FIFO (First In First Out) processing of incoming executions.",
        "summary": "FetchCurrentPendingFOTAJobExecution",
        "tags": [
          "FOTA Job Executions"
        ],
        "security": [
          {
            "Simple Token": []
          },
          {
            "JSON Web Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "description": "Return only executions with the given firmware type",
            "in": "query",
            "name": "firmwareType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FirmwareTypes"
            }
          }
        ]
      }
    },
    "/fota-job-executions/{deviceId}/{jobId}": {
      "get": {
        "operationId": "FetchFOTAJobExecution",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOTAJobExecution"
                }
              }
            }
          }
        },
        "summary": "FetchFOTAJobExecution",
        "tags": [
          "FOTA Job Executions"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          }
        ]
      },
      "patch": {
        "operationId": "UpdateFOTAJobExecutionStatus",
        "responses": {
          "202": {
            "description": "Updated FOTA job execution status"
          }
        },
        "summary": "UpdateFOTAJobExecutionStatus",
        "tags": [
          "FOTA Job Executions"
        ],
        "security": [
          {
            "Simple Token": []
          },
          {
            "JSON Web Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "deviceId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "details": {
                    "type": "string"
                  },
                  "status": {
                    "$ref": "#/components/schemas/FotaV2JobExecutionEvents"
                  }
                },
                "required": [
                  "status"
                ],
                "type": "object"
              }
            }
          }
        }
      }
    },
    "/fota-jobs": {
      "post": {
        "operationId": "CreateFOTAJob",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "jobId": {
                      "$ref": "#/components/schemas/UUID"
                    }
                  },
                  "required": [
                    "jobId"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "summary": "CreateFOTAJob",
        "tags": [
          "FOTA Jobs"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateJobInput"
              }
            }
          }
        }
      },
      "get": {
        "operationId": "ListFOTAJobs",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_FOTAV2Job_"
                }
              }
            }
          }
        },
        "summary": "ListFOTAJobs",
        "tags": [
          "FOTA Jobs"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/fota-jobs/{jobId}/apply": {
      "post": {
        "operationId": "ApplyFOTAJob",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "summary": "ApplyFOTAJob",
        "tags": [
          "FOTA Jobs"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          }
        ]
      }
    },
    "/fota-jobs/{jobId}": {
      "get": {
        "operationId": "FetchFOTAJob",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FOTAV2Job"
                }
              }
            }
          }
        },
        "summary": "FetchFOTAJob",
        "tags": [
          "FOTA Jobs"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          }
        ]
      },
      "delete": {
        "operationId": "DeleteFOTAJob",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "description": "Deletes a fota job that is not IN_PROGRESS. Does not affect executions associated with this jobs.",
        "summary": "DeleteFOTAJob",
        "tags": [
          "FOTA Jobs"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          }
        ]
      }
    },
    "/fota-jobs/{jobId}/cancel": {
      "put": {
        "operationId": "CancelFOTAJob",
        "responses": {
          "202": {
            "description": ""
          }
        },
        "summary": "CancelFOTAJob",
        "tags": [
          "FOTA Jobs"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "jobId",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/JobId"
            }
          },
          {
            "in": "query",
            "name": "reason",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      }
    },
    "/location/agps": {
      "get": {
        "operationId": "GetAssistanceData",
        "responses": {
          "206": {
            "description": "Contains chunk of file defined by the Range header.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgpsResponseBuffer"
                }
              }
            }
          }
        },
        "description": "Provides assistance data to the device. Enables a faster time-to-first-fix (TTFF) for the GPS modem. Returns the modem\nparameters for the nRF91 GPS modem in a chunk. The chunk size is determined by the request Range header. See `GetFileSize` [endpoint](#operation/GetFileSize) for details.\n\n__Basic Request__:\n```sh\ncurl -G $API_HOST/v1/location/agps -H \"Authorization: Bearer $JWT\" -H \"Content-Type: application/octet-stream\" -H \"Range: bytes=0-2200\" --output agps.bin\n```\n\n__Custom Request__:\n```sh\ncurl -G \"$API_HOST/v1/location/agps\" -d \"requestType=custom\" -d \"customTypes=8\" -d \"mcc=$MCC\" -d \"mnc=$MNC\" -d \"tac=$TAC\" -d \"eci=$ECI\" -H \"Authorization: Bearer $JWT\" -H \"Content-Type: application/octet-stream\" -H \"Range: bytes=0-2200\" --output agps.bin\n```\n\n__Potential error codes__: 41600, 42200. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "GetAssistanceData",
        "tags": [
          "Assisted GPS"
        ],
        "security": [
          {
            "JSON Web Token": []
          },
          {
            "Service Evaluation Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "requestType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/RequestType"
            }
          },
          {
            "description": "custom types, required if requestType = custom. 1 = utc parameters, 2 = ephemeries data, 3 = almanac data, 4 = klobuchar ionospheric correction, 5 = nequick ionospheric correction, 6 = gps time of week, 7 = gps system clock, 8 = location (lat/lon of cell tower) 9 = gps integrity info",
            "in": "query",
            "name": "customTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NrfMessageType"
              }
            }
          },
          {
            "in": "query",
            "name": "mcc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Mcc"
            }
          },
          {
            "in": "query",
            "name": "mnc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Mnc"
            }
          },
          {
            "in": "query",
            "name": "tac",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Tac"
            }
          },
          {
            "in": "query",
            "name": "eci",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Eci"
            }
          },
          {
            "in": "query",
            "name": "rsrp",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Rsrp"
            }
          },
          {
            "in": "query",
            "name": "filtered",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FilteredEphemerisFlag"
            }
          },
          {
            "in": "query",
            "name": "mask",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SatelliteMaskAngle"
            }
          },
          {
            "in": "header",
            "name": "range",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ]
      },
      "head": {
        "operationId": "GetFileSize",
        "responses": {
          "200": {
            "description": "Body is empty. Response \"Content-Length\" header contains the size of the file (bytes).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AgpsBuffer"
                }
              }
            }
          }
        },
        "description": "This endpoint is for advanced use cases where you need to set the Range header to something other than the payload size.\nNormally you will just set the Range header to the payload limit for your modem gets the payload size of the modem\nparameters. This endpoint returns the totalBytes in the `Content-Length` response header, no body.\nThe `Content-Length` header in the response can be used in the `Range` header for a subsequent `GET` request (same query string, just\n`GET` instead of `HEAD` + `Range` header).\n```sh\ncurl -I \"$API_HOST/v1/location/agps\" -H \"Authorization: Bearer $JWT\"\n```\n\n__Potential error codes__: 42200. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "GetFileSize",
        "tags": [
          "Assisted GPS"
        ],
        "security": [
          {
            "JSON Web Token": []
          },
          {
            "Service Evaluation Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "requestType",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/RequestType"
            }
          },
          {
            "description": "custom types, required if requestType = custom. 1 = utc parameters, 2 = ephemeries data, 3 = almanac data, 4 = klobuchar ionospheric correction, 5 = nequick ionospheric correction, 6 = gps time of week, 7 = gps system clock, 8 = location (lat/lon of cell tower) 9 = gps integrity info",
            "in": "query",
            "name": "customTypes",
            "required": false,
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/NrfMessageType"
              }
            }
          },
          {
            "in": "query",
            "name": "mcc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Mcc"
            }
          },
          {
            "in": "query",
            "name": "mnc",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Mnc"
            }
          },
          {
            "in": "query",
            "name": "tac",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Tac"
            }
          },
          {
            "in": "query",
            "name": "eci",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Eci"
            }
          },
          {
            "in": "query",
            "name": "rsrp",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Rsrp"
            }
          },
          {
            "in": "query",
            "name": "filtered",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/FilteredEphemerisFlag"
            }
          },
          {
            "in": "query",
            "name": "mask",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SatelliteMaskAngle"
            }
          }
        ]
      }
    },
    "/location/cell": {
      "post": {
        "operationId": "GetLocationFromCellTowers",
        "responses": {
          "200": {
            "description": "Returns lat/lon coordinates and uncertainty for a device using cell tower data.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CellResponseWithFulfillment"
                }
              }
            }
          }
        },
        "description": "Gets the lat, lon, and uncertainty values for the LTE cellular tower(s) passed. If the optional `nmr` parameter is passed the endpoint operates in a \"multi-cell\" mode, using\nmore than one cell tower to determine a more accurate location.\n\nReturn JSON payload.\n```sh\ncurl --location --request POST \"$API_HOST/v1/location/cell\" \\\n--header \"Authorization: Bearer $JWT\" \\\n--header \"Content-Type: application/json\" \\\n--data-raw \"{\\\"lte\\\":[{\\\"mcc\\\":$MCC, \\\"mnc\\\":$MNC,\\\"tac\\\":$TAC,\\\"eci\\\":$ECI}]}\"\n```\n__Potential error codes__: 41600, 42200. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "GetLocationFromCellTowers",
        "tags": [
          "Cell Location"
        ],
        "security": [
          {
            "JSON Web Token": []
          },
          {
            "Service Evaluation Token": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CellRequest"
              }
            }
          }
        }
      }
    },
    "/location/history": {
      "get": {
        "operationId": "GetLocationHistory",
        "responses": {
          "200": {
            "description": "Contains JSON response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_LocationTrackerItem_"
                }
              }
            }
          }
        },
        "description": "Get location history for one or all devices for supported location services, see `serviceType` in the response JSON.\n\nLocation history data expires after ~6 months (27 weeks).\n\n__Basic Request for device history__:\n```sh\ncurl -G $API_HOST/v1/location/history -d \"deviceId=$DEVICE_ID&inclusiveStart=2021-10-01T00:00:00.000Z&inclusiveEnd=2021-11-01T00:00:00.000Z\" -H \"Authorization: Bearer $API_KEY\"\n```\n\n__Paginated Request__:\n```sh\nexport PAGE_NEXT_TOKEN=$(curl -G $API_HOST/v1/location/history -d \"deviceId=$DEVICE_ID&inclusiveStart=2021-10-01T00:00:00.000Z&inclusiveEnd=2021-11-01T00:00:00.000Z\" -H \"Authorization: Bearer $API_KEY\" | jq .pageNextToken)\n\ncurl -G $API_HOST/v1/location/history -d \"deviceId=$DEVICE_ID\" --data-urlencode \"pageNextToken=$PAGE_NEXT_TOKEN\" -H \"Authorization: Bearer $API_KEY\"\n```\n\n__Request all devices location history__&dagger;:\n```sh\ncurl -G $API_HOST/v1/location/history -H \"Authorization: Bearer $API_KEY\"\n```\n\n__Request all devices last known location__&dagger;:\n```sh\ncurl -G $API_HOST/v1/location/history -d \"latest=true\" -H \"Authorization: Bearer $API_KEY\"\n```\n\n&dagger; Requires admin privileges\n\n__Potential error codes__: 40000, 40100, 42200. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "GetLocationHistory",
        "tags": [
          "Location History"
        ],
        "security": [],
        "parameters": [
          {
            "description": "This is the canonical device id that is an optional parameter. Specify a device id to get it's location history. If a device id is not provided location history for all devices in the account are returned, you must have admin privileges to perform this operation.",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "in": "query",
            "name": "deviceIdentifier",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            },
            "deprecated": true
          },
          {
            "description": "Get the last known location for all devices in your account. You must have admin privileges.",
            "in": "query",
            "name": "latest",
            "required": false,
            "schema": {
              "default": false,
              "type": "boolean"
            }
          },
          {
            "in": "query",
            "name": "inclusiveStart",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ISODateTimeString"
            }
          },
          {
            "in": "query",
            "name": "inclusiveEnd",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ISODateTimeString"
            }
          },
          {
            "in": "query",
            "name": "pageSort",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageSort"
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    },
    "/location/pgps": {
      "get": {
        "operationId": "GetPredictedAssistanceData",
        "responses": {
          "200": {
            "description": "Link to the P-GPS binary payload file for download.",
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "path": {
                      "$ref": "#/components/schemas/PgpsFilePath"
                    },
                    "host": {
                      "$ref": "#/components/schemas/PgpsHost"
                    }
                  },
                  "required": [
                    "path",
                    "host"
                  ],
                  "type": "object"
                }
              }
            }
          }
        },
        "description": "Generates up to two weeks of gps predictions. The predictions are used by the nRF91 GPS modem\nto enable a faster time-to-first-fix (TTFF) and provide offline navigation when out of range of an LTE tower.\n\nReturns a link for easy download of the predictions file.\n\n__Basic Request__:\n```sh\ncurl -G $API_HOST/v1/location/pgps -H \"Authorization: Bearer $JWT\" -H \"Content-Type: application/json\"\n```\n__Custom Request__:\n```sh\ncurl -G $API_HOST/v1/location/pgps  -H \"Authorization: Bearer $JWT\" -H \"Content-Type: application/json\" -d \"predictionCount=42\" -d \"predictionIntervalMinutes=240\" -d \"startGpsDay=15131\" -d \"startGpsTimeOfDaySeconds=0\"\n```\n\n__Potential error codes__: 40000. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "GetPredictedAssistanceData",
        "tags": [
          "Predicted GPS"
        ],
        "security": [
          {
            "JSON Web Token": []
          },
          {
            "Service Evaluation Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "predictionCount",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PredictionCount"
            }
          },
          {
            "in": "query",
            "name": "predictionIntervalMinutes",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PredictionInterval"
            }
          },
          {
            "in": "query",
            "name": "startGpsDay",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StartGpsDay"
            }
          },
          {
            "in": "query",
            "name": "startGpsTimeOfDaySeconds",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/StartGpsTime"
            }
          }
        ]
      }
    },
    "/location/single-cell": {
      "get": {
        "operationId": "GetSingleCellLocation",
        "responses": {
          "200": {
            "description": "Contains file-chunk or JSON response, depending on format param",
            "content": {
              "application/json": {
                "schema": {
                  "anyOf": [
                    {
                      "$ref": "#/components/schemas/SingleCellResponseBuffer"
                    },
                    {
                      "$ref": "#/components/schemas/CellResponse"
                    }
                  ]
                }
              }
            }
          }
        },
        "description": "<div style=\"background-color: #f8d7da; color: #721c24; text-align: center; border: 1px solid #f5c6cb; border-radius: .25rem; padding: .75rem 1.25rem\">This endpoint has been deprecated. Please use the <a href=\"#tag/Cell-Location\">cell location endpoint</a> instead.</div>\n\nGets the lat, lon, altitude, and uncertainty values based on the id of the cellular tower passed.\nReturns a binary payload or JSON, depending on the format argument. Binary by default. When returning binary, the by content-type response header is \"application/octet-stream\".\n```sh\ncurl -G $API_HOST/v1/location/single-cell -d \"mcc=$MCC\" -d \"mnc=$MNC\" -d \"tac=$TAC\" -d \"eci=$ECI\" -d \"format=json\" -H \"Authorization: Bearer $JWT\" -H \"Content-Type: application/json\"\n```\n__Potential error codes__: 40000, 42200. See the [Error Codes](#section/ErrorCodes) section.",
        "summary": "GetSingleCellLocation",
        "tags": [
          "Single Cell"
        ],
        "deprecated": true,
        "security": [
          {
            "JSON Web Token": []
          },
          {
            "Service Evaluation Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "mcc",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Mcc"
            }
          },
          {
            "in": "query",
            "name": "mnc",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Mnc"
            }
          },
          {
            "in": "query",
            "name": "tac",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Tac"
            }
          },
          {
            "in": "query",
            "name": "eci",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/Eci"
            }
          },
          {
            "in": "query",
            "name": "rsrp",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/Rsrp"
            }
          },
          {
            "in": "query",
            "name": "format",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/SingleCellFormat"
            }
          }
        ]
      }
    },
    "/location/wifi": {
      "post": {
        "operationId": "GetLocationFromWifiNetworks",
        "responses": {
          "200": {
            "description": "Returns lat/lon coordinates and uncertainty for a device using nearby Wi-Fi networks",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WifiResponse"
                }
              }
            }
          }
        },
        "description": "Get location based on nearby Wi-Fi networks. At least two Access Points are required.",
        "tags": [
          "Wi-Fi Location"
        ],
        "security": [
          {
            "JSON Web Token": []
          },
          {
            "Service Evaluation Token": []
          }
        ],
        "parameters": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WifiRequest"
              }
            }
          }
        }
      }
    },
    "/messages": {
      "get": {
        "operationId": "ListMessages",
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedResult_DeviceMessage_"
                }
              }
            }
          }
        },
        "description": "Fetch historical device messages. For more information, see our [nRF Cloud documentation on device messages](https://docs.nrfcloud.com/Reference/DeviceMessages).",
        "summary": "ListMessages",
        "tags": [
          "Messages"
        ],
        "security": [
          {
            "Simple Token": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "inclusiveStart",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ISODateTimeString"
            }
          },
          {
            "in": "query",
            "name": "exclusiveEnd",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/ISODateTimeString"
            }
          },
          {
            "description": "Filter returned messages by appId. Primarily used by Asset Tracker, AppId is taken from the \"appId\" property of\nthe message body and is intended to represent the type of data being sent. This can be used to categorize your\nmessages for easy filtering when using the same topic.",
            "in": "query",
            "name": "appId",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MessageAppId"
            }
          },
          {
            "description": "A device Id to fetch messages for. Can be specified with appId or topic.",
            "in": "query",
            "name": "deviceId",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/DeviceId"
            }
          },
          {
            "description": "Fetch messages for a single topic. Can be specified with deviceId.",
            "in": "query",
            "name": "topic",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/MqttTopic"
            }
          },
          {
            "in": "query",
            "name": "pageLimit",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageLimit"
            }
          },
          {
            "in": "query",
            "name": "pageSort",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageSort"
            }
          },
          {
            "in": "query",
            "name": "pageNextToken",
            "required": false,
            "schema": {
              "$ref": "#/components/schemas/PageNextToken"
            }
          }
        ]
      }
    }
  },
  "x-tagGroups": [
    {
      "name": "General",
      "tags": [
        "Account"
      ]
    },
    {
      "name": "Device Management",
      "tags": [
        "All Devices",
        "IP Devices",
        "Gateways",
        "Bluetooth Low Energy Devices",
        "Messages"
      ]
    },
    {
      "name": "Firmware Over-the-Air (FOTA) Update Service",
      "tags": [
        "The FOTA Service",
        "Firmware Bundles",
        "FOTA Jobs",
        "FOTA Job Executions"
      ]
    },
    {
      "name": "Location Services",
      "tags": [
        "Location History",
        "Assisted GPS",
        "Predicted GPS",
        "Cell Location",
        "Single Cell",
        "Wi-Fi Location"
      ]
    },
    {
      "name": "Miscellaneous",
      "tags": [
        "Bulk Ops Requests"
      ]
    }
  ],
  "servers": [
    {
      "url": "/v1"
    }
  ],
  "tags": [
    {
      "name": "Account",
      "description": "Endpoints for account management."
    },
    {
      "name": "All Devices",
      "description": "Endpoints for devices that can send data to the platform, whether directly or through a gateway."
    },
    {
      "name": "Gateways",
      "description": "Endpoints for gateways."
    },
    {
      "name": "Bluetooth Low Energy Devices",
      "description": "Endpoints for Bluetooth Low Energy devices."
    },
    {
      "name": "IP Devices",
      "description": "Endpoints for device that have an IP address and can send messages directly to the platform."
    },
    {
      "name": "The FOTA Service",
      "description": "Endpoints for working with the Firmware Over-the-Air (FOTA) Updates service.\n\nFor more information see the [FOTA Service documentation](https://docs.nrfcloud.com/Reference/DeviceManagement/FOTA).\n"
    },
    {
      "name": "FOTA Jobs",
      "description": "Endpoints for creating and interacting with FOTA Jobs.\n\nFor more information see the [FOTA Service documentation](https://docs.nrfcloud.com/Reference/DeviceManagement/FOTA).\n"
    },
    {
      "name": "FOTA Job Executions",
      "description": "Endpoints for interacting with individual FOTA Job Executions.\n\nFor more information see the [FOTA Service documentation](https://docs.nrfcloud.com/Reference/DeviceManagement/FOTA).\n"
    },
    {
      "name": "Firmware Bundles",
      "description": "Endpoints for managing your firmware bundles.\n\nFor more information see the [FOTA Service documentation](https://docs.nrfcloud.com/Reference/DeviceManagement/FOTA).\n"
    },
    {
      "name": "Location Services",
      "description": "The Location Service endpoints help devices quickly and efficiently know their location in the world.\n\nFor more information see the [Location Services documentation](https://docs.nrfcloud.com/Reference/LocationServices).\n"
    },
    {
      "name": "Assisted GPS",
      "description": "Endpoints for retrieving assistance data, enabling a faster time-to-first-fix (TTFF) for the GPS modem.\n\nFor more information see the [Location Services documentation](https://docs.nrfcloud.com/Reference/LocationServices).\n"
    },
    {
      "name": "Single Cell",
      "description": "<span></span>\n"
    },
    {
      "name": "Predicted GPS",
      "description": "Endpoints for retrieving up to two weeks of predicted assistance data, enabling a faster time-to-first-fix (TTFF) for the GPS modem, even when the device is offline.\n\nFor more information see the [Location Services documentation](https://docs.nrfcloud.com/Reference/LocationServices#location-based-on-gps-data).\n"
    },
    {
      "name": "Cell Location",
      "description": "Endpoints to retrieve the coarse location of the device based on the nearest cell tower(s).\n\nFor more information see the [Location Services documentation](https://docs.nrfcloud.com/Reference/LocationServices#location-based-on-cell-towers).\n"
    },
    {
      "name": "Assisted GPS",
      "description": "Endpoints for retrieving up to two weeks of predicted assistance data, enabling a faster time-to-first-fix (TTFF) for the GPS modem.\n\nFor more information see the [Location Services documentation](https://docs.nrfcloud.com/Reference/LocationServices#location-based-on-gps-data).\n"
    },
    {
      "name": "Wi-Fi Location",
      "description": "Endpoint to retrieve the location of the device based on the nearest wi-fi access points.\n"
    },
    {
      "name": "Location History",
      "description": "Endpoint to retrieve the previous locations for a device.\n"
    },
    {
      "name": "Messages",
      "description": "Endpoints for sending and retrieving messages sent to or from a device."
    },
    {
      "name": "Bulk Ops Requests",
      "description": "Endpoints for viewing the details and status of one or more bulk operations requests. A bulk operation request is a request to any endpoint that supports asynchronous operations, such as the <a href='/v1#operation/ProvisionDevices'>ProvisionDevices</a> endpoint."
    },
    {
      "name": "Misc."
    }
  ]
}