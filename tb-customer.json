{"openapi":"3.0.3","info":{"title":"TB Customer API","description":" ThingsBoard open-source IoT platform REST API documentation.","contact":{"name":"ThingsBoard team","url":"https://thingsboard.io","email":"info@thingsboard.io"},"license":{"name":"Apache License Version 2.0","url":"https://github.com/thingsboard/thingsboard/blob/master/LICENSE"},"version":"3.3.3-SNAPSHOT"},"servers":[{"url":"https://demo.thingsboard.io:443","description":"Inferred Url"}],"tags":[{"name":"customer-controller","description":"Customer Controller"}],"paths":{"/api/customer":{"post":{"tags":["customer-controller"],"summary":"Create or update Customer (saveCustomer)","description":"Creates or Updates the Customer. When creating customer, platform generates Customer Id as [time-based UUID](https://en.wikipedia.org/wiki/Universally_unique_identifier#Version_1_(date-time_and_MAC_address)). The newly created Customer Id will be present in the response. Specify existing Customer Id to update the Customer. Referencing non-existing Customer Id will cause 'Not Found' error.\n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"saveCustomerUsingPOST","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid request body","errorCode":31,"timestamp":"2022-01-28T09:01:25.437+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.437+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.437+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.510+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.510+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/customer/{customerId}":{"get":{"tags":["customer-controller"],"summary":"Get Customer (getCustomerById)","description":"Get the Customer object based on the provided Customer Id. If the user has the authority of 'Tenant Administrator', the server checks that the customer is owned by the same tenant. If the user has the authority of 'Customer User', the server checks that the user belongs to the customer.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getCustomerByIdUsingGET","parameters":[{"name":"customerId","in":"path","description":"A string value representing the customer id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:24.995+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]},"delete":{"tags":["customer-controller"],"summary":"Delete Customer (deleteCustomer)","description":"Deletes the Customer and all customer Users. All assigned Dashboards, Assets, Devices, etc. will be unassigned but not deleted. Referencing non-existing Customer Id will cause an error.\n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"deleteCustomerUsingDELETE","parameters":[{"name":"customerId","in":"path","description":"A string value representing the customer id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK"},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:25.510+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.521+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.521+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.522+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.522+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/customer/{customerId}/shortInfo":{"get":{"tags":["customer-controller"],"summary":"Get short Customer info (getShortCustomerInfoById)","description":"Get the short customer object that contains only the title and 'isPublic' flag. If the user has the authority of 'Tenant Administrator', the server checks that the customer is owned by the same tenant. If the user has the authority of 'Customer User', the server checks that the user belongs to the customer.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getShortCustomerInfoByIdUsingGET","parameters":[{"name":"customerId","in":"path","description":"A string value representing the customer id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/JsonNode"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:24.995+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/customer/{customerId}/title":{"get":{"tags":["customer-controller"],"summary":"Get Customer Title (getCustomerTitleById)","description":"Get the title of the customer. If the user has the authority of 'Tenant Administrator', the server checks that the customer is owned by the same tenant. If the user has the authority of 'Customer User', the server checks that the user belongs to the customer.\n\nAvailable for users with 'TENANT_ADMIN' or 'CUSTOMER_USER' authority.","operationId":"getCustomerTitleByIdUsingGET","parameters":[{"name":"customerId","in":"path","description":"A string value representing the customer id. For example, '784f394c-42b6-435a-983c-b7beff2784f9'","required":true,"style":"simple","schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/text":{"schema":{"type":"string"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:24.995+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/customers{?page,pageSize,sortOrder,sortProperty,textSearch}":{"get":{"tags":["customer-controller"],"summary":"Get Tenant Customers (getCustomers)","description":"Returns a page of customers owned by tenant. You can specify parameters to filter the results. The result is wrapped with PageData object that allows you to iterate over result set using pagination. See the 'Model' tab of the Response Class for more details. \n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"getCustomersUsingGET","parameters":[{"name":"pageSize","in":"query","description":"Maximum amount of entities in a one page","required":true,"style":"form","allowReserved":true,"schema":{"type":"integer","format":"int32"}},{"name":"page","in":"query","description":"Sequence number of page starting from 0","required":true,"style":"form","allowReserved":true,"schema":{"type":"integer","format":"int32"}},{"name":"textSearch","in":"query","description":"The case insensitive 'substring' filter based on the customer title.","required":false,"style":"form","schema":{"type":"string"}},{"name":"sortProperty","in":"query","description":"Property of entity to sort by","required":false,"style":"form","schema":{"type":"string","enum":["city","country","createdTime","email","title"]}},{"name":"sortOrder","in":"query","description":"Sort order. ASC (ASCENDING) or DESC (DESCENDING)","required":false,"style":"form","schema":{"type":"string","enum":["ASC","DESC"]}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/PageData«Customer»"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:24.995+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}},"/api/tenant/customers{?customerTitle}":{"get":{"tags":["customer-controller"],"summary":"Get Tenant Customer by Customer title (getTenantCustomer)","description":"Get the Customer using Customer Title. \n\nAvailable for users with 'TENANT_ADMIN' authority.","operationId":"getTenantCustomerUsingGET","parameters":[{"name":"customerTitle","in":"query","description":"A string value representing the Customer title.","required":true,"style":"form","allowReserved":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}},"400":{"description":"Bad Request","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-400":{"summary":"Bad Request","value":{"status":400,"message":"Invalid UUID string: 123","errorCode":31,"timestamp":"2022-01-28T09:01:24.995+00:00"}}}}}},"401":{"description":"Unauthorized","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-401":{"summary":"Unauthorized","value":{"status":401,"message":"Authentication failed","errorCode":10,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"403":{"description":"Forbidden","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-403":{"summary":"Forbidden","value":{"status":403,"message":"You don't have permission to perform this operation!","errorCode":20,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"404":{"description":"Not Found","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-404":{"summary":"Not Found","value":{"status":404,"message":"Requested item wasn't found!","errorCode":32,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}},"429":{"description":"Too Many Requests","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ThingsboardErrorResponse"},"examples":{"error-code-429":{"summary":"Too Many Requests","value":{"status":429,"message":"Too many requests for current tenant!","errorCode":33,"timestamp":"2022-01-28T09:01:25.431+00:00"}}}}}}},"security":[{"HTTP login form":["SYS_ADMIN","TENANT_ADMIN","CUSTOMER_USER"]}]}}},"components":{"schemas":{"Customer":{"title":"Customer","required":["address","address2","city","country","email","phone","state","tenantId","zip"],"type":"object","properties":{"id":{"description":"JSON object with the customer Id. Specify this field to update the customer. Referencing non-existing customer Id will cause error. Omit this field to create new customer.","$ref":"#/components/schemas/CustomerId"},"createdTime":{"type":"integer","description":"Timestamp of the customer creation, in milliseconds","format":"int64","readOnly":true,"example":1609459200000},"title":{"type":"string","description":"Title of the customer","example":"Company A"},"name":{"type":"string","description":"Name of the customer. Read-only, duplicated from title for backward compatibility","readOnly":true,"example":"Company A"},"tenantId":{"description":"JSON object with Tenant Id","$ref":"#/components/schemas/TenantId"},"country":{"type":"string","description":"Country","example":"US"},"state":{"type":"string","description":"State","example":"NY"},"city":{"type":"string","description":"City","example":"New York"},"address":{"type":"string","description":"Address Line 1","example":"42 Broadway Suite 12-400"},"address2":{"type":"string","description":"Address Line 2"},"zip":{"type":"string","description":"Zip code","example":"10004"},"phone":{"type":"string","description":"Phone number","example":"+1(415)777-7777"},"email":{"type":"string","description":"Email","example":"example@company.com"},"additionalInfo":{"description":"Additional parameters of the device","$ref":"#/components/schemas/JsonNode"}}},"CustomerId":{"title":"CustomerId","required":["entityType","id"],"type":"object","properties":{"id":{"type":"string","description":"ID of the entity, time-based UUID v1","format":"uuid","example":"784f394c-42b6-435a-983c-b7beff2784f9"},"entityType":{"type":"string","description":"string","example":"CUSTOMER","enum":["CUSTOMER"]}}}}}}
